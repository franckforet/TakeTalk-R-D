{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/Collections/Groups.js","filenameRelative":"/lib/Collections/Groups.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/Collections/Groups.js.map","sourceFileName":"/lib/Collections/Groups.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Groups"},"ignored":false,"code":"Groups = new Meteor.Collection('groups');\nGroups.allow({\n    update: function (userId, group) {\n        return true; /*return ownsDocument(userId, group);*/\n    },\n    remove: function (userId, group) {\n        return ownsDocument(userId, group);\n    },\n    insert: function (userId, doc) {\n        // autoriser les posts seulement si l'utilisateur est authentifié\n        return !!userId;\n    }\n});\nMeteor.methods({\n    groupInsert: function (groupAttributes) {\n        check(Meteor.userId(), String);\n        check(groupAttributes, {\n            name: String,\n            members: [String]\n        });\n        var user = Meteor.user();\n\n        var group = _.extend(groupAttributes, {\n            userId: user._id,\n            author: user.emails,\n            authorAdress: user.emails[0].address,\n            authorName: user.username,\n            submitted: new Date()\n        });\n\n        var groupId = Groups.insert(group);\n        return {\n            _id: groupId\n        };\n    }\n});","ast":null,"map":{"version":3,"sources":["/lib/Collections/Groups.js"],"names":["Groups","Meteor","Collection","allow","update","userId","group","remove","ownsDocument","insert","doc","methods","groupInsert","groupAttributes","check","String","name","members","user","_","extend","_id","author","emails","authorAdress","address","authorName","username","submitted","Date","groupId"],"mappings":"AAAAA,SAAS,IAAIC,OAAOC,UAAX,CAAsB,QAAtB,CAAT;AAEAF,OAAOG,KAAP,CAAa;AACXC,YAAQ,UAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAAE,eAAO,IAAP,CAAF,CAAa;AAAyC,KAD3E;AAEXC,YAAQ,UAASF,MAAT,EAAiBC,KAAjB,EAAwB;AAAE,eAAOE,aAAaH,MAAb,EAAqBC,KAArB,CAAP;AAAqC,KAF5D;AAGXG,YAAQ,UAASJ,MAAT,EAAiBK,GAAjB,EAAsB;AAC5B;AACA,eAAO,CAAC,CAAEL,MAAV;AACD;AANU,CAAb;AASCJ,OAAOU,OAAP,CAAe;AACXC,iBAAa,UAASC,eAAT,EAA0B;AACnCC,cAAMb,OAAOI,MAAP,EAAN,EAAuBU,MAAvB;AACAD,cAAMD,eAAN,EAAuB;AACnBG,kBAAMD,MADa;AAEnBE,qBAAS,CAACF,MAAD;AAFU,SAAvB;AAKA,YAAIG,OAAOjB,OAAOiB,IAAP,EAAX;;AACA,YAAIZ,QAAQa,EAAEC,MAAF,CAASP,eAAT,EAA0B;AAClCR,oBAAQa,KAAKG,GADqB;AAElCC,oBAAQJ,KAAKK,MAFqB;AAGlCC,0BAAcN,KAAKK,MAAL,CAAY,CAAZ,EAAeE,OAHK;AAIlCC,wBAAaR,KAAKS,QAJgB;AAKlCC,uBAAW,IAAIC,IAAJ;AALuB,SAA1B,CAAZ;;AAOA,YAAIC,UAAU9B,OAAOS,MAAP,CAAcH,KAAd,CAAd;AACA,eAAO;AACHe,iBAAKS;AADF,SAAP;AAGH;AApBU,CAAf","file":"/lib/Collections/Groups.js.map","sourcesContent":["Groups = new Meteor.Collection('groups');\n\nGroups.allow({\n  update: function(userId, group) { return true/*return ownsDocument(userId, group);*/ },\n  remove: function(userId, group) { return ownsDocument(userId, group); },\n  insert: function(userId, doc) {\n    // autoriser les posts seulement si l'utilisateur est authentifié\n    return !! userId;\n  }\n });\n\n Meteor.methods({\n     groupInsert: function(groupAttributes) {\n         check(Meteor.userId(), String);\n         check(groupAttributes, {\n             name: String,\n             members: [String]\n         });\n\n         var user = Meteor.user();\n         var group = _.extend(groupAttributes, {\n             userId: user._id,\n             author: user.emails,\n             authorAdress: user.emails[0].address,\n             authorName : user.username,\n             submitted: new Date()\n         });\n         var groupId = Groups.insert(group);\n         return {\n             _id: groupId\n         };\n     }\n });\n"]},"hash":"b47a014b30b0de6c4a9c16c5050998648c0984da"}
