{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/Router.js","filenameRelative":"/lib/Router.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/Router.js.map","sourceFileName":"/lib/Router.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Router"},"ignored":false,"code":"Router.configure({\n  layoutTemplate: 'layout',\n  waitOn: function () {\n    return [Meteor.subscribe('groups'), Meteor.subscribe('meetings')];\n  }\n}); /** The route to the home page */\nRouter.route('/', {\n  name: 'home'\n});\nRouter.route('/create/:_id?', {\n  name: 'create',\n  data: function () {\n    return Groups.findOne(this.params._id);\n  }\n});\nRouter.route('/groups', {\n  name: 'groups'\n});\nRouter.route('/groupSubmit', {\n  name: 'groupSubmit'\n});\nRouter.route('/groups/:_id', {\n  name: 'groupPage',\n  data: function () {\n    return Groups.findOne(this.params._id);\n  }\n});\nRouter.route('/meeting/:_meetingId', {\n  name: 'meeting',\n  data: function () {\n    // Recherche du meeting dont l'id est passé en paramètre\n    // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé\n    var meeting = Meetings.findOne({\n      _id: this.params._meetingId,\n      status: \"ongoing\"\n    }); //  console.log(meeting);\n\n    if (meeting === undefined) {\n      //  console.log('undefined meeting...');\n      Router.configure({\n        layoutTemplate: 'layout',\n        notFoundTemplate: '404'\n      });\n    } else return Meetings.findOne({\n      _id: this.params._meetingId,\n      status: \"ongoing\"\n    });\n  }\n});\nRouter.route('/join/:_meetingId/:_userId', {\n  name: 'join',\n  data: function () {\n    // Recherche du meeting dont l'id est passé en paramètre\n    // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé\n    var meeting = Meetings.findOne({\n      _id: this.params._meetingId\n    });\n\n    if (meeting === undefined) {\n      console.log('meeting undefined');\n      Router.configure({\n        layoutTemplate: 'layout',\n        notFoundTemplate: '404'\n      });\n    } //Recherche de l'utilisateur\n    //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouvé\n    //Ne permet qu'aux utilisateurs invités de rejoindre un meeting\n\n\n    var user = MeetingUsers.findOne({\n      _id: this.params._userId\n    });\n\n    if (user === undefined) {\n      console.log('user undefined');\n      Router.configure({\n        layoutTemplate: 'layout',\n        notFoundTemplate: '404'\n      });\n    }\n\n    Session.set(\"meetingId\", this.params._meetingId);\n    Session.set(\"userId\", this.params._userId);\n    return {};\n  }\n});\nRouter.route('/meeting/:_meetingId/lineup', function () {\n  this.render('lineup');\n});\nRouter.route('/end', function () {\n  this.render('end');\n});","ast":null,"map":{"version":3,"sources":["/lib/Router.js"],"names":["Router","configure","layoutTemplate","waitOn","Meteor","subscribe","route","name","data","Groups","findOne","params","_id","meeting","Meetings","_meetingId","status","undefined","notFoundTemplate","console","log","user","MeetingUsers","_userId","Session","set","render"],"mappings":"AAAAA,OAAOC,SAAP,CAAiB;AACfC,kBAAgB,QADD;AAEfC,UAAQ,YAAU;AAChB,WAAO,CACLC,OAAOC,SAAP,CAAiB,QAAjB,CADK,EAELD,OAAOC,SAAP,CAAiB,UAAjB,CAFK,CAAP;AAGE;AANW,CAAjB,E,CAYA;AACAL,OAAOM,KAAP,CAAa,GAAb,EAAkB;AAACC,QAAK;AAAN,CAAlB;AAEAP,OAAOM,KAAP,CAAa,eAAb,EAA8B;AAC5BC,QAAM,QADsB;AAE5BC,QAAM,YAAW;AAAE,WAAOC,OAAOC,OAAP,CAAe,KAAKC,MAAL,CAAYC,GAA3B,CAAP;AAAyC;AAFhC,CAA9B;AAKAZ,OAAOM,KAAP,CAAa,SAAb,EAAwB;AAACC,QAAK;AAAN,CAAxB;AACAP,OAAOM,KAAP,CAAa,cAAb,EAA6B;AAACC,QAAK;AAAN,CAA7B;AACAP,OAAOM,KAAP,CAAa,cAAb,EAA6B;AAC3BC,QAAM,WADqB;AAE3BC,QAAM,YAAW;AAAE,WAAOC,OAAOC,OAAP,CAAe,KAAKC,MAAL,CAAYC,GAA3B,CAAP;AAAyC;AAFjC,CAA7B;AAMAZ,OAAOM,KAAP,CAAa,sBAAb,EAAqC;AACnCC,QAAM,SAD6B;AAEnCC,QAAM,YAAW;AACjB;AACA;AACE,QAAIK,UAAUC,SAASJ,OAAT,CAAiB;AAACE,WAAK,KAAKD,MAAL,CAAYI,UAAlB;AAA8BC,cAAQ;AAAtC,KAAjB,CAAd,CAHe,CAKjB;;AACE,QAAGH,YAAYI,SAAf,EAAyB;AACvB;AACEjB,aAAOC,SAAP,CAAiB;AAACC,wBAAgB,QAAjB;AAA2BgB,0BAAkB;AAA7C,OAAjB;AACH,KAHD,MAKE,OAAQJ,SAASJ,OAAT,CAAiB;AAACE,WAAK,KAAKD,MAAL,CAAYI,UAAlB;AAA8BC,cAAQ;AAAtC,KAAjB,CAAR;AAEH;AAfkC,CAArC;AAkBAhB,OAAOM,KAAP,CAAa,4BAAb,EAA2C;AACvCC,QAAM,MADiC;AAEvCC,QAAM,YAAW;AAEb;AACA;AACA,QAAIK,UAAUC,SAASJ,OAAT,CAAiB;AAACE,WAAK,KAAKD,MAAL,CAAYI;AAAlB,KAAjB,CAAd;;AACA,QAAGF,YAAYI,SAAf,EAAyB;AACrBE,cAAQC,GAAR,CAAY,mBAAZ;AACApB,aAAOC,SAAP,CAAiB;AAACC,wBAAgB,QAAjB;AAA2BgB,0BAAkB;AAA7C,OAAjB;AACH,KARY,CAUb;AACA;AACA;;;AACA,QAAIG,OAAOC,aAAaZ,OAAb,CAAqB;AAACE,WAAK,KAAKD,MAAL,CAAYY;AAAlB,KAArB,CAAX;;AACA,QAAGF,SAASJ,SAAZ,EAAsB;AAClBE,cAAQC,GAAR,CAAY,gBAAZ;AACApB,aAAOC,SAAP,CAAiB;AAACC,wBAAgB,QAAjB;AAA2BgB,0BAAkB;AAA7C,OAAjB;AACH;;AAEDM,YAAQC,GAAR,CAAY,WAAZ,EAAyB,KAAKd,MAAL,CAAYI,UAArC;AACAS,YAAQC,GAAR,CAAY,QAAZ,EAAsB,KAAKd,MAAL,CAAYY,OAAlC;AAEA,WAAO,EAAP;AACH;AAzBsC,CAA3C;AA4BAvB,OAAOM,KAAP,CAAa,6BAAb,EAA4C,YAAY;AACpD,OAAKoB,MAAL,CAAY,QAAZ;AACH,CAFD;AAIA1B,OAAOM,KAAP,CAAa,MAAb,EAAqB,YAAY;AAC7B,OAAKoB,MAAL,CAAY,KAAZ;AACH,CAFD","file":"/lib/Router.js.map","sourcesContent":["Router.configure({\n  layoutTemplate: 'layout',\n  waitOn: function(){\n    return [\n      Meteor.subscribe('groups'),\n      Meteor.subscribe('meetings')\n    ]},\n    /*return Meteor.subscribe('groups'); },\n  waitOn: function(){return Meteor.subscribe('meetings'); }\n  */\n});\n\n/** The route to the home page */\nRouter.route('/', {name:'home'});\n\nRouter.route('/create/:_id?', {\n  name: 'create',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\nRouter.route('/groups', {name:'groups'});\nRouter.route('/groupSubmit', {name:'groupSubmit'});\nRouter.route('/groups/:_id', {\n  name: 'groupPage',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\n\nRouter.route('/meeting/:_meetingId', {\n  name: 'meeting',\n  data: function() {\n  // Recherche du meeting dont l'id est passé en paramètre\n  // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé\n    var meeting = Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  //  console.log(meeting);\n    if(meeting === undefined){\n      //  console.log('undefined meeting...');\n        Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n    }\n    else\n      return  Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  }\n});\n\nRouter.route('/join/:_meetingId/:_userId', {\n    name: 'join',\n    data: function() {\n\n        // Recherche du meeting dont l'id est passé en paramètre\n        // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé\n        var meeting = Meetings.findOne({_id: this.params._meetingId});\n        if(meeting === undefined){\n            console.log('meeting undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        //Recherche de l'utilisateur\n        //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouvé\n        //Ne permet qu'aux utilisateurs invités de rejoindre un meeting\n        var user = MeetingUsers.findOne({_id: this.params._userId});\n        if(user === undefined){\n            console.log('user undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        Session.set(\"meetingId\", this.params._meetingId);\n        Session.set(\"userId\", this.params._userId);\n\n        return {};\n    }\n});\n\nRouter.route('/meeting/:_meetingId/lineup', function () {\n    this.render('lineup');\n});\n\nRouter.route('/end', function () {\n    this.render('end');\n});\n"]},"hash":"1494c49faede9d5e6105a78065b439305d402817"}
