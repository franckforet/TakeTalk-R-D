[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\naccountsUIBootstrap3 = Package['ian:accounts-ui-bootstrap-3'].accountsUIBootstrap3;\nTAPi18next = Package['tap:i18n'].TAPi18next;\nTAPi18n = Package['tap:i18n'].TAPi18n;\nSession = Package.session.Session;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nPresences = Package['tmeasday:presence'].Presences;\nPresence = Package['tmeasday:presence'].Presence;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"application\":{\"template.create.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/application/template.create.js                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"create\");                                                                                       // 2\nTemplate[\"create\"] = new Template(\"Template.create\", (function() {                                                    // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"main-content\"                                                                                             // 6\n  }, \"\\n    \", HTML.DIV({                                                                                             // 7\n    class: \"row\"                                                                                                      // 8\n  }, \"\\n      \", HTML.DIV({                                                                                           // 9\n    class: \"col-md-8 col-md-offset-2\"                                                                                 // 10\n  }, \"\\n        \", HTML.DIV({                                                                                         // 11\n    class: \"panel panel-default\"                                                                                      // 12\n  }, \"\\n          \", HTML.DIV({                                                                                       // 13\n    class: \"panel-heading\"                                                                                            // 14\n  }, HTML.SPAN({                                                                                                      // 15\n    class: \"title\"                                                                                                    // 16\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 17\n    return Spacebars.mustache(view.lookup(\"_\"), \"createTitle\");                                                       // 18\n  }))), \"\\n          \", HTML.DIV({                                                                                    // 19\n    class: \"panel-body\"                                                                                               // 20\n  }, \"\\n            \", HTML.FORM({                                                                                    // 21\n    role: \"form\",                                                                                                     // 22\n    id: \"create-form\"                                                                                                 // 23\n  }, \"\\n              \", HTML.DIV({                                                                                   // 24\n    class: \"form-group\"                                                                                               // 25\n  }, \"\\n                \", HTML.LABEL({                                                                               // 26\n    for: \"animatorName\"                                                                                               // 27\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 28\n    return Spacebars.mustache(view.lookup(\"_\"), \"createAnimatorName\");                                                // 29\n  })), \"\\n                \", HTML.INPUT({                                                                             // 30\n    id: \"animatorName\",                                                                                               // 31\n    name: \"animatorName\",                                                                                             // 32\n    type: \"text\",                                                                                                     // 33\n    class: \"form-control\",                                                                                            // 34\n    value: function() {                                                                                               // 35\n      return Spacebars.mustache(view.lookup(\"authorName\"));                                                           // 36\n    },                                                                                                                // 37\n    required: \"\",                                                                                                     // 38\n    autofocus: \"\"                                                                                                     // 39\n  }), \"\\n              \"), \"\\n              \", HTML.DIV({                                                             // 40\n    class: \"form-group\"                                                                                               // 41\n  }, \"\\n                \", HTML.LABEL({                                                                               // 42\n    for: \"animatorEmail\"                                                                                              // 43\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 44\n    return Spacebars.mustache(view.lookup(\"_\"), \"createMail\");                                                        // 45\n  })), \"\\n                \", HTML.DIV({                                                                               // 46\n    class: \"input-group\"                                                                                              // 47\n  }, HTML.Raw('<span class=\"input-group-addon\">@</span>'), \"\\n                  \", HTML.INPUT({                       // 48\n    id: \"animatorEmail\",                                                                                              // 49\n    name: \"animatorEmail\",                                                                                            // 50\n    type: \"email\",                                                                                                    // 51\n    \"parsley-type\": \"email\",                                                                                          // 52\n    class: \"form-control\",                                                                                            // 53\n    value: function() {                                                                                               // 54\n      return Spacebars.mustache(view.lookup(\"authorAdress\"));                                                         // 55\n    },                                                                                                                // 56\n    required: \"\"                                                                                                      // 57\n  }), \"\\n                \"), \"\\n              \"), \"\\n              \", HTML.DIV({                                      // 58\n    class: \"form-group\"                                                                                               // 59\n  }, \"\\n                \", HTML.LABEL({                                                                               // 60\n    for: \"meetingName\"                                                                                                // 61\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 62\n    return Spacebars.mustache(view.lookup(\"_\"), \"createMeetingName\");                                                 // 63\n  })), \"\\n                \", HTML.Raw('<input id=\"meetingName\" name=\"meetingName\" type=\"text\" class=\"form-control\" required=\"\">'), \"\\n              \"), \"\\n              \", HTML.DIV({\n    class: \"form-group\"                                                                                               // 65\n  }, \"\\n                            \", HTML.Raw(\"<label>Duration (h:min)</label>\"), \"\\n                            \", HTML.DIV({\n    class: \"duration-group\",                                                                                          // 67\n    rank: \"1\"                                                                                                         // 68\n  }, \"\\n\\n                                  \", Spacebars.include(view.lookupTemplate(\"tempName\")), \"\\n\\n\\n                            \"), \"\\n              \"), \"\\n              \", HTML.DIV({\n    class: \"form-group participant-email-group\"                                                                       // 70\n  }, \"\\n                \", HTML.LABEL(Blaze.View(\"lookup:_\", function() {                                             // 71\n    return Spacebars.mustache(view.lookup(\"_\"), \"createParticipantsMail\");                                            // 72\n  })), \"\\n                \", Blaze.Each(function() {                                                                  // 73\n    return Spacebars.call(view.lookup(\"members\"));                                                                    // 74\n  }, function() {                                                                                                     // 75\n    return [ \"\\n                \", HTML.DIV({                                                                         // 76\n      class: \"participant-email\",                                                                                     // 77\n      rank: function() {                                                                                              // 78\n        return Spacebars.mustache(view.lookup(\"@index\"));                                                             // 79\n      }                                                                                                               // 80\n    }, \"\\n                  \", HTML.DIV({                                                                             // 81\n      class: \"input-group xs-mb-15\"                                                                                   // 82\n    }, HTML.SPAN({                                                                                                    // 83\n      class: \"input-group-addon\"                                                                                      // 84\n    }, \"@\"), \"\\n                    \", HTML.INPUT({                                                                   // 85\n      class: \"participant-email-input form-control\",                                                                  // 86\n      name: \"participantsEmails\",                                                                                     // 87\n      type: \"email\",                                                                                                  // 88\n      \"parsley-type\": \"email\",                                                                                        // 89\n      value: function() {                                                                                             // 90\n        return Spacebars.mustache(view.lookup(\".\"));                                                                  // 91\n      }                                                                                                               // 92\n    }), \"\\n                  \"), \"\\n                \"), \"\\n\\n                \" ];                                     // 93\n  }), \"\\n                \", HTML.DIV({                                                                                // 94\n    class: \"participant-email\",                                                                                       // 95\n    rank: function() {                                                                                                // 96\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"members\"), \"length\"));                                     // 97\n    }                                                                                                                 // 98\n  }, \"\\n                  \", HTML.Raw('<div class=\"input-group xs-mb-15\"><span class=\"input-group-addon\">@</span>\\n                    <input class=\"participant-email-input form-control\" name=\"participantsEmails\" type=\"email\" parsley-type=\"email\">\\n                  </div>'), \"\\n                \"), \"\\n              \"), \"\\n              \", HTML.Raw('<div class=\"spacer text-right\">\\n                <button type=\"submit\" class=\"btn btn-space btn-primary\">Create your meeting</button>\\n              </div>'), \"\\n            \"), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));                                                                                                                  // 100\n                                                                                                                      // 101\nTemplate.__checkName(\"tempName\");                                                                                     // 102\nTemplate[\"tempName\"] = new Template(\"Template.tempName\", (function() {                                                // 103\n  var view = this;                                                                                                    // 104\n  return HTML.Raw('<div class=\"input-group datetimepicker\">\\n    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-time\"></i></span>\\n    <input class=\"set-due-date form-control\" type=\"text\" name=\"meetingDuration\">\\n  </div>');\n}));                                                                                                                  // 106\n                                                                                                                      // 107\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.home.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/application/template.home.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"home\");                                                                                         // 2\nTemplate[\"home\"] = new Template(\"Template.home\", (function() {                                                        // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"main-content\"                                                                                             // 6\n  }, \"\\n    \", HTML.DIV({                                                                                             // 7\n    class: \"row\"                                                                                                      // 8\n  }, \"\\n        \", HTML.DIV({                                                                                         // 9\n    class: \"col-xs-12 col-md-6 col-md-offset-3\"                                                                       // 10\n  }, \"\\n            \", HTML.DIV({                                                                                     // 11\n    class: \"panel panel-default\"                                                                                      // 12\n  }, \"\\n                \", HTML.DIV({                                                                                 // 13\n    class: \"panel-heading\"                                                                                            // 14\n  }, HTML.SPAN({                                                                                                      // 15\n    class: \"title\"                                                                                                    // 16\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 17\n    return Spacebars.mustache(view.lookup(\"_\"), \"homeTitle\");                                                         // 18\n  }))), \"\\n                \", HTML.DIV({                                                                              // 19\n    class: \"panel-body\"                                                                                               // 20\n  }, \"\\n                    \", HTML.P(Blaze.View(\"lookup:_\", function() {                                             // 21\n    return Spacebars.mustache(view.lookup(\"_\"), \"homeBody\");                                                          // 22\n  })), \"\\n                    \", HTML.DIV({                                                                           // 23\n    class: \"spacer text-right\"                                                                                        // 24\n  }, \"\\n                        \", HTML.BUTTON({                                                                      // 25\n    type: \"button\",                                                                                                   // 26\n    class: \"btn btn-space btn-primary btn-rounded btn-lg\",                                                            // 27\n    id: \"open\"                                                                                                        // 28\n  }, \"\\n                            \", HTML.A({                                                                       // 29\n    style: \"color:#fff\",                                                                                              // 30\n    href: function() {                                                                                                // 31\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"create\");                                                    // 32\n    }                                                                                                                 // 33\n  }, HTML.Raw('<i class=\"glyphicon glyphicon-plus-sign\"></i>'), \"  \", Blaze.View(\"lookup:_\", function() {             // 34\n    return Spacebars.mustache(view.lookup(\"_\"), \"openMeeting\");                                                       // 35\n  })), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \"), \"\\n\");\n}));                                                                                                                  // 37\n                                                                                                                      // 38\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.input.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/application/template.input.js                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"input\");                                                                                        // 2\nTemplate[\"input\"] = new Template(\"Template.input\", (function() {                                                      // 3\n  var view = this;                                                                                                    // 4\n  return [ HTML.Raw('<!--  <input name=\\'testinput\\' class=\\'test-input\\' type=\\'text\\' uniqid=\"{{uniqid}}\" value=\"{{value}}\">\\n  <button class=\\'remove-input\\' uniqid=\"{{uniqid}}\">Remove</button>\\n-->\\n<!--\\n<div class=\"controls\">\\n  <input name=\"member\" id=\"member{{uniqid}}\" type=\"text\" value=\"{{value}}\" placeholder=\"member\" class=\"form-control\"/>\\n  <span class=\"glyphicon glyphicon-minus\" id=\\'remove-input\\' uniqid=\"{{uniqid}}\" role=\"button\"></span>\\n</div>\\n-->\\n\\n'), HTML.DIV({\n    class: \"input-group\"                                                                                              // 6\n  }, HTML.Raw('<span class=\"input-group-addon\">@</span>'), \"\\n    \", HTML.INPUT({                                     // 7\n    name: \"member\",                                                                                                   // 8\n    id: function() {                                                                                                  // 9\n      return [ \"member\", Spacebars.mustache(view.lookup(\"uniqid\")) ];                                                 // 10\n    },                                                                                                                // 11\n    type: \"email\",                                                                                                    // 12\n    \"parsley-type\": \"email\",                                                                                          // 13\n    value: function() {                                                                                               // 14\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                // 15\n    },                                                                                                                // 16\n    placeholder: \"member mail\",                                                                                       // 17\n    class: \"form-control\"                                                                                             // 18\n  }), \"\\n    \", HTML.SPAN({                                                                                           // 19\n    class: \"input-group-addon\",                                                                                       // 20\n    id: \"remove-input\",                                                                                               // 21\n    uniqid: function() {                                                                                              // 22\n      return Spacebars.mustache(view.lookup(\"uniqid\"));                                                               // 23\n    },                                                                                                                // 24\n    role: \"button\"                                                                                                    // 25\n  }, HTML.Raw(\"<b>-</b>\")), \"\\n\"), HTML.Raw(\"\\n\\n<br>\") ];                                                            // 26\n}));                                                                                                                  // 27\n                                                                                                                      // 28\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.meeting.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/application/template.meeting.js                                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"meeting\");                                                                                      // 2\nTemplate[\"meeting\"] = new Template(\"Template.meeting\", (function() {                                                  // 3\n  var view = this;                                                                                                    // 4\n  return [ HTML.DIV({                                                                                                 // 5\n    class: \"main-content\"                                                                                             // 6\n  }, \"\\n    \", Blaze.If(function() {                                                                                  // 7\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                // 8\n  }, function() {                                                                                                     // 9\n    return [ \"\\n\\n    \", HTML.DIV({                                                                                   // 10\n      class: \"col-md-8\"                                                                                               // 11\n    }, \"\\n      \", Spacebars.include(view.lookupTemplate(\"meetingReport\")), \"\\n    \"), \"\\n\\n    \", HTML.Comment(\"START PREMIER PANL DROITE : Time Management \"), \"\\n    \", HTML.DIV({\n      class: \"col-md-4\"                                                                                               // 13\n    }, \"\\n      \", HTML.DIV({                                                                                         // 14\n      class: \"panel panel-default panel-heading-fullwidth panel-warning\"                                              // 15\n    }, \"\\n        \", HTML.DIV({                                                                                       // 16\n      class: \"panel-heading\"                                                                                          // 17\n    }, HTML.SPAN({                                                                                                    // 18\n      class: \"title\"                                                                                                  // 19\n    }, \"Time Management\")), \"\\n        \", HTML.DIV({                                                                  // 20\n      class: \"panel-body\"                                                                                             // 21\n    }, \"\\n          \", HTML.DIV({                                                                                     // 22\n      class: \"row\"                                                                                                    // 23\n    }, \"\\n            \", HTML.Comment(\" Bouton pour cr�er une demande d'intervention \"), \"\\n            \", HTML.DIV({\n      class: \"col-md-5\"                                                                                               // 25\n    }, \"\\n              \", HTML.DIV({                                                                                 // 26\n      class: \"input-group\"                                                                                            // 27\n    }, \"\\n                \", HTML.SPAN({                                                                              // 28\n      class: \"input-group-addon\",                                                                                     // 29\n      id: \"sizing-addon2\"                                                                                             // 30\n    }, HTML.B(\"Duration: \")), \"\\n                \", HTML.SPAN({                                                       // 31\n      type: \"text\",                                                                                                   // 32\n      class: \"form-control\",                                                                                          // 33\n      placeholder: \"Time\",                                                                                            // 34\n      \"aria-describedby\": \"sizing-addon2\",                                                                            // 35\n      id: \"meetingTime\",                                                                                              // 36\n      style: \"width:70%\"                                                                                              // 37\n    }, Blaze.View(\"lookup:testVariable\", function() {                                                                 // 38\n      return Spacebars.mustache(view.lookup(\"testVariable\"));                                                         // 39\n    })), \"\\n              \"), \"\\n            \"), \"\\n            \", HTML.Comment(\" {{#if isAnimator}} \"), \"\\n            \", HTML.Comment(\" Boutons de gestion du don de temps de parole \"), \"\\n            \", HTML.DIV({\n      class: \"col-md-7 text-right\"                                                                                    // 41\n    }, \"\\n              \", HTML.INPUT(HTML.Attrs({                                                                    // 42\n      type: \"button\",                                                                                                 // 43\n      class: \"btn btn-primary\",                                                                                       // 44\n      role: \"button\",                                                                                                 // 45\n      id: \"startTime\",                                                                                                // 46\n      value: \"start\"                                                                                                  // 47\n    }, function() {                                                                                                   // 48\n      return Spacebars.attrMustache(view.lookup(\"disabled\"));                                                         // 49\n    })), \"\\n              \", HTML.INPUT(HTML.Attrs({                                                                  // 50\n      type: \"button\",                                                                                                 // 51\n      class: \"btn btn-primary\",                                                                                       // 52\n      role: \"button\",                                                                                                 // 53\n      id: \"PauseTime\",                                                                                                // 54\n      value: \"stop\"                                                                                                   // 55\n    }, function() {                                                                                                   // 56\n      return Spacebars.attrMustache(view.lookup(\"disabled\"));                                                         // 57\n    })), \"\\n            \"), \"\\n            \", HTML.Comment(\" {{/if}} \"), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.Comment(\"END PREMIER PANL DROITE : Time Management \"), \"\\n\\n\\n    \", HTML.Comment(\"START SECOND PANL DROITE : Participant \"), \"\\n    \", HTML.DIV({\n      class: \"col-md-4\"                                                                                               // 59\n    }, \"\\n      \", HTML.DIV({                                                                                         // 60\n      class: \"panel panel-default panel-heading-fullwidth panel-primary\"                                              // 61\n    }, \"\\n        \", HTML.DIV({                                                                                       // 62\n      class: \"panel-heading\"                                                                                          // 63\n    }, HTML.SPAN({                                                                                                    // 64\n      class: \"title\"                                                                                                  // 65\n    }, \"Participant\")), \"\\n        \", HTML.DIV({                                                                      // 66\n      class: \"panel-body\"                                                                                             // 67\n    }, \"\\n          \", HTML.DIV({                                                                                     // 68\n      class: \"row\"                                                                                                    // 69\n    }, \"\\n            \", HTML.Comment(\" {{#each Users} \"), \"\\n            \", HTML.Comment(\" Liste des intervenant \"), \"\\n\\n            \", HTML.DIV({\n      class: \"col-md-5\"                                                                                               // 71\n    }, \"\\n              \", HTML.SPAN({                                                                                // 72\n      class: \"label label-info input-group-addon\"                                                                     // 73\n    }, \"\\n                \", Blaze.View(\"lookup:animatorMail\", function() {                                           // 74\n      return Spacebars.mustache(view.lookup(\"animatorMail\"));                                                         // 75\n    }), \"\\n\\n                \", Blaze.View(\"lookup:getSpeaker\", function() {                                          // 76\n      return Spacebars.mustache(view.lookup(\"getSpeaker\"));                                                           // 77\n    }), \"\\n\\n                \", Blaze.If(function() {                                                                 // 78\n      return Spacebars.call(view.lookup(\"ownMeeting\"));                                                               // 79\n    }, function() {                                                                                                   // 80\n      return [ \"\\n                \", HTML.SPAN({                                                                      // 81\n        class: \"glyphicon glyphicon-user\",                                                                            // 82\n        \"aria-hidden\": \"true\"                                                                                         // 83\n      }), \"\\n                \" ];                                                                                     // 84\n    }), \"\\n              \"), \"\\n\\n\\n              \", Blaze.If(function() {                                            // 85\n      return Spacebars.call(view.lookup(\"isSpeaker\"));                                                                // 86\n    }, function() {                                                                                                   // 87\n      return [ \"\\n\\n              \", HTML.SPAN({                                                                      // 88\n        class: \"label label-info input-group-addon\"                                                                   // 89\n      }, \"\\n                \", HTML.SPAN({                                                                            // 90\n        class: \"glyphicon glyphicon-volume-up\",                                                                       // 91\n        \"aria-hidden\": \"true\"                                                                                         // 92\n      }), \"\\n              \"), \"\\n              \" ];                                                                  // 93\n    }), \"\\n            \"), \"\\n            \", HTML.DIV({                                                               // 94\n      class: \"col-md-7 text-right\"                                                                                    // 95\n    }, \"\\n              \", HTML.INPUT(HTML.Attrs({                                                                    // 96\n      type: \"button\",                                                                                                 // 97\n      class: \"btn btn-primary\",                                                                                       // 98\n      role: \"button\",                                                                                                 // 99\n      id: \"speakControl\",                                                                                             // 100\n      value: \"take\"                                                                                                   // 101\n    }, function() {                                                                                                   // 102\n      return Spacebars.attrMustache(view.lookup(\"disabled\"));                                                         // 103\n    })), \"\\n            \"), \"\\n            \", HTML.BR(), \" \", HTML.BR(), HTML.BR(), \"\\n            \", HTML.Comment(' <div class=\"col-md-11\" style=\"padding-right:0\">\\n            <div class=\"list-group\">\\n            <h4 class=\"list-group-item-heading\">{{Meteor.username}}</h4>\\n            <p>\\n            {{#each paroles}}\\n            {{>parole}}\\n            {{/each}}\\n          </p>\\n        </div>\\n      </div> '), \"\\n      \", HTML.Comment(\" Actions possibles en rapport avec l'intervenant \"), \"\\n      \", HTML.Comment(' <div class=\"col-md-1\" style=\"padding-left:0\">\\n      {{#if isSessionGuest name}}\\n      <div class=\"input-group guestRemove\" guest=\"{{name}}\">\\n      <button type=\"button\" class=\"btn btn-danger btn-xs removeGuest\">\\n      <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\\n    </button>\\n  </div>\\n  {{/if}}\\n</div> '), \"\\n\", HTML.Comment(\" {{/each}} \"), \"\\n\"), \"\\n\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"participantsEmails\"));                                                       // 105\n    }, function() {                                                                                                   // 106\n      return [ \"\\n\", HTML.DIV({                                                                                       // 107\n        class: \"row\"                                                                                                  // 108\n      }, \"\\n  \", HTML.DIV({                                                                                           // 109\n        class: \"col-md-5\"                                                                                             // 110\n      }, \"\\n    \", HTML.SPAN({                                                                                        // 111\n        class: \"label label-info input-group-addon\"                                                                   // 112\n      }, \"\\n      \", Blaze.View(\"lookup:.\", function() {                                                              // 113\n        return Spacebars.mustache(view.lookup(\".\"));                                                                  // 114\n      }), \"\\n      \", Blaze.If(function() {                                                                           // 115\n        return Spacebars.call(view.lookup(\"partMeeting\"));                                                            // 116\n      }, function() {                                                                                                 // 117\n        return [ \"\\n      \", HTML.SPAN({                                                                              // 118\n          class: \"glyphicon glyphicon-user\",                                                                          // 119\n          \"aria-hidden\": \"true\"                                                                                       // 120\n        }), \"\\n      \" ];                                                                                             // 121\n      }), \"\\n    \"), \"\\n    \", Blaze.If(function() {                                                                  // 122\n        return Spacebars.call(view.lookup(\"isSpeaker\"));                                                              // 123\n      }, function() {                                                                                                 // 124\n        return [ \"\\n    \", HTML.SPAN({                                                                                // 125\n          class: \"label label-info input-group-addon\"                                                                 // 126\n        }, \"\\n      \", HTML.SPAN({                                                                                    // 127\n          class: \"glyphicon glyphicon-volume-up\",                                                                     // 128\n          \"aria-hidden\": \"true\"                                                                                       // 129\n        }), \"\\n    \"), \"\\n    \" ];                                                                                    // 130\n      }, function() {                                                                                                 // 131\n        return [ \"\\n    \", Blaze.If(function() {                                                                      // 132\n          return Spacebars.call(view.lookup(\"isAsking\"));                                                             // 133\n        }, function() {                                                                                               // 134\n          return [ \"\\n    \", HTML.SPAN({                                                                              // 135\n            class: \"label label-info input-group-addon\"                                                               // 136\n          }, \"\\n      \", HTML.SPAN({                                                                                  // 137\n            class: \"glyphicon glyphicon-hourglass\",                                                                   // 138\n            \"aria-hidden\": \"true\"                                                                                     // 139\n          }), \"\\n    \"), \"\\n    \" ];                                                                                  // 140\n        }), \"\\n    \" ];                                                                                               // 141\n      }), \"\\n\\n  \"), \"\\n  \", HTML.DIV({                                                                               // 142\n        class: \"col-md-7 text-right\"                                                                                  // 143\n      }, \"\\n    \", Blaze.If(function() {                                                                              // 144\n        return Spacebars.call(view.lookup(\"ownMeeting\"));                                                             // 145\n      }, function() {                                                                                                 // 146\n        return [ \"\\n    \", HTML.INPUT(HTML.Attrs({                                                                    // 147\n          type: \"button\",                                                                                             // 148\n          class: \"btn btn-primary\",                                                                                   // 149\n          role: \"button\",                                                                                             // 150\n          id: \"speakControl\",                                                                                         // 151\n          value: \"give\"                                                                                               // 152\n        }, function() {                                                                                               // 153\n          return Spacebars.attrMustache(view.lookup(\"disabled\"));                                                     // 154\n        })), \"\\n    \" ];                                                                                              // 155\n      }), \"\\n    \", HTML.INPUT(HTML.Attrs({                                                                           // 156\n        type: \"button\",                                                                                               // 157\n        class: \"btn btn-primary\",                                                                                     // 158\n        role: \"button\",                                                                                               // 159\n        id: \"speakAsk\",                                                                                               // 160\n        value: \"ask\"                                                                                                  // 161\n      }, function() {                                                                                                 // 162\n        return Spacebars.attrMustache(view.lookup(\"disabled\"));                                                       // 163\n      })), \"\\n\\n  \"), \"\\n\"), \"\\n\", HTML.BR(), \"\\n\", HTML.BR(), \"\\n\" ];                                                // 164\n    }), \"\\n\"), \"\\n\", HTML.Comment(\" panel-body \"), \"\\n\"), \"\\n\"), \"\\n\", HTML.Comment(\"FIN PREMIER PANEL DROITE : participant \"), \"\\n\\n\\n\", HTML.Comment(\"START THIRD PANEL DROITE : Bouton \"), \"\\n\\n\", HTML.DIV({\n      class: \"col-md-4\"                                                                                               // 166\n    }, \"\\n  \", HTML.Comment(' <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#localModal\">Add local participant</button> '), \"\\n  \", HTML.BUTTON({\n      type: \"button\",                                                                                                 // 168\n      class: \"btn btn-primary\",                                                                                       // 169\n      \"data-toggle\": \"modal\",                                                                                         // 170\n      \"data-target\": \"#invitationModal\"                                                                               // 171\n    }, \"Invite participants\"), \"\\n  \", HTML.BUTTON({                                                                  // 172\n      type: \"button\",                                                                                                 // 173\n      class: \"btn btn-danger\",                                                                                        // 174\n      role: \"button\",                                                                                                 // 175\n      id: \"closeMeeting\"                                                                                              // 176\n    }, \"Close meeting\"), \"\\n\\n\"), \"\\n\", HTML.Comment(\"FIN THIRD PANEL DROITE : bouton \"), \"\\n\\n\\n\", HTML.Comment(\"FIN PREMIER PANEL DROITE\"), \"\\n\\n\\n\", HTML.Comment(\"START PREMIER PANEL  : PPT \"), \"\\n\\n\", HTML.DIV({\n      class: \"col-md-12\"                                                                                              // 178\n    }, \"\\n  \", Spacebars.include(view.lookupTemplate(\"pptcont\")), \"\\n\"), \"\\n\\n\" ];                                    // 179\n  }, function() {                                                                                                     // 180\n    return [ \"\\n\", HTML.DIV({                                                                                         // 181\n      class: \"panel-body\"                                                                                             // 182\n    }, \"\\n  \", HTML.P({                                                                                               // 183\n      class: \"alert alert-warning\"                                                                                    // 184\n    }, HTML.SPAN({                                                                                                    // 185\n      class: \"glyphicon glyphicon-warning-sign\"                                                                       // 186\n    }), HTML.STRONG(Blaze.View(\"lookup:_\", function() {                                                               // 187\n      return Spacebars.mustache(view.lookup(\"_\"), \"warning\");                                                         // 188\n    })), Blaze.View(\"lookup:_\", function() {                                                                          // 189\n      return Spacebars.mustache(view.lookup(\"_\"), \"warningLogInfo\");                                                  // 190\n    })), \"\\n\"), \"\\n\" ];                                                                                               // 191\n  }), \"\\n\"), HTML.Raw('\\n\\n\\n<!-- **************************************** -->\\n<!-- Modal d\\'ajout d\\'un participant ext�rieur -->\\n<!-- **************************************** -->\\n<!-- <div class=\"modal fade\" id=\"invitationModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"invitationModalLabel\">\\n<div class=\"modal-dialog\" role=\"document\">\\n<div class=\"modal-content\">\\n<div class=\"modal-header\">\\n<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\\n<h4 class=\"modal-title\" id=\"invitationModalLabel\">Invite Participants</h4>\\n</div>\\n<div class=\"modal-body\">\\n\\n<h3>By email address</h3>\\n<form role=\"form\" id=\"inviteForm\">\\n<div class=\"form-group email-input-group\">\\n<label class=\"control-label\">Your participants\\' e-mails</label>\\n<div class=\"participantEmailInput\" rank=\"1\">\\n<div class=\"input-group xs-mb-15\"><span class=\"input-group-addon\">@</span>\\n<input class=\"participantsEmails form-control\" name=\"participantsEmails\" type=\"email\" parsley-type=\"email\">\\n</div>\\n</div>\\n</div>\\n<div class=\"modal-footer\">\\n<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\\n<button id=\"inviteSubmit\" type=\"submit\" class=\"btn btn-primary\">Invite</button>\\n</div>\\n</form>\\n</div>\\n</div>\\n</div>\\n</div> -->\\n<!-- ************************************************************************************************************* -->\\n<!-- Modal de notification qui s\\'affiche sur le dashboard d\\'un intervenant auquel l\\'animateur a supprim� le speech -->\\n<!-- ************************************************************************************************************* -->\\n<!-- <div class=\"modal fade\" id=\"speech-delete-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"speech-delete-label\">\\n<div class=\"modal-dialog\" role=\"document\">\\n<div class=\"modal-content\">\\n<div class=\"modal-header\">\\n<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\\n<h4 class=\"modal-title\" id=\"speech-delete-label\">Invite Participants</h4>\\n</div>\\n<div class=\"modal-body\">\\nYour speech have been deleted\\n</div>\\n</div>\\n</div>\\n</div> -->') ];\n}));                                                                                                                  // 193\n                                                                                                                      // 194\nTemplate.__checkName(\"parole\");                                                                                       // 195\nTemplate[\"parole\"] = new Template(\"Template.parole\", (function() {                                                    // 196\n  var view = this;                                                                                                    // 197\n  return [ HTML.SPAN(\"Speech Duration : \", Blaze.View(\"lookup:displayTime\", function() {                              // 198\n    return Spacebars.mustache(view.lookup(\"displayTime\"), view.lookup(\"time\"));                                       // 199\n  })), HTML.Raw(\"<br>\") ];                                                                                            // 200\n}));                                                                                                                  // 201\n                                                                                                                      // 202\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.meetingLeft.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/application/template.meetingLeft.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"meetingReport\");                                                                                // 2\nTemplate[\"meetingReport\"] = new Template(\"Template.meetingReport\", (function() {                                      // 3\n  var view = this;                                                                                                    // 4\n  return HTML.Raw('<div class=\"panel panel-default panel-heading-fullwidth panel-primary\">\\n    <div class=\"panel-heading\"><span class=\"title\">Meeting Report</span></div>\\n    <div class=\"panel-body\" id=\"report-cont\">\\n      <div class=\"container-fluid\" style=\"margin-bottom:5px\">\\n        <div class=\"input-group\">\\n          <span class=\"input-group-addon\" id=\"sizing-addon2\"><b>Report Title : </b></span>\\n          <input type=\"text\" class=\"form-control\" placeholder=\"Title\" aria-describedby=\"sizing-addon2\" id=\"TitleReport\" style=\"width:70%\">\\n          <button type=\"button\" class=\"btn btn-success\" id=\"saveReport\" style=\"margin-left:10px;\">Save Meeting Report</button>\\n        </div>\\n      </div>\\n      <div class=\"row\">\\n        <div id=\"textareaRich\">\\n          Your Report\\'s Meetings !!\\n        </div>\\n      </div>\\n    </div>\\n  </div>');\n}));                                                                                                                  // 6\n                                                                                                                      // 7\nTemplate.__checkName(\"pptcont\");                                                                                      // 8\nTemplate[\"pptcont\"] = new Template(\"Template.pptcont\", (function() {                                                  // 9\n  var view = this;                                                                                                    // 10\n  return HTML.Raw('<div class=\"panel panel-default panel-heading-fullwidth panel-primary\">\\n    <div class=\"panel-heading\"><span class=\"title\">Presentation</span> </div>\\n    <div class=\"panel-body\">\\n      <iframe src=\"https://docs.google.com/presentation/d/1Y6LU1__oSxTFL8Ykw9sEcikwvGcVNhUtT3JZ5Auiqos/embed?start=false&amp;loop=false&amp;delayms=5000\" frameborder=\"0\" width=\"100%\" height=\"600\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>    </div>\\n    </div>');\n}));                                                                                                                  // 12\n                                                                                                                      // 13\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"group\":{\"template.group_item.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/template.group_item.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"groupItem\");                                                                                    // 2\nTemplate[\"groupItem\"] = new Template(\"Template.groupItem\", (function() {                                              // 3\n  var view = this;                                                                                                    // 4\n  return Blaze.If(function() {                                                                                        // 5\n    return Spacebars.call(view.lookup(\"partGroup\"));                                                                  // 6\n  }, function() {                                                                                                     // 7\n    return [ \"\\n  \", HTML.DIV({                                                                                       // 8\n      class: \"group\"                                                                                                  // 9\n    }, \"\\n    \", HTML.DIV({                                                                                           // 10\n      class: \"post-content\"                                                                                           // 11\n    }, \"\\n      \", HTML.LI(Blaze.If(function() {                                                                      // 12\n      return Spacebars.call(view.lookup(\"ownGroup\"));                                                                 // 13\n    }, function() {                                                                                                   // 14\n      return [ HTML.U(Blaze.View(\"lookup:name\", function() {                                                          // 15\n        return Spacebars.mustache(view.lookup(\"name\"));                                                               // 16\n      })), \" \" ];                                                                                                     // 17\n    }, function() {                                                                                                   // 18\n      return [ \" \", Blaze.View(\"lookup:name\", function() {                                                            // 19\n        return Spacebars.mustache(view.lookup(\"name\"));                                                               // 20\n      }), \" \" ];                                                                                                      // 21\n    }), HTML.A({                                                                                                      // 22\n      href: function() {                                                                                              // 23\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"groupPage\");                                               // 24\n      },                                                                                                              // 25\n      class: \"discuss btn btn-info\"                                                                                   // 26\n    }, Blaze.View(\"lookup:_\", function() {                                                                            // 27\n      return Spacebars.mustache(view.lookup(\"_\"), \"access\");                                                          // 28\n    }))), \"\\n      \", HTML.BR(), \"\\n    \"), \"\\n  \"), \"\\n  \" ];                                                        // 29\n  });                                                                                                                 // 30\n}));                                                                                                                  // 31\n                                                                                                                      // 32\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.group_list.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/template.group_list.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"groupsList\");                                                                                   // 2\nTemplate[\"groupsList\"] = new Template(\"Template.groupsList\", (function() {                                            // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"groups\"                                                                                                   // 6\n  }, \"\\n    \", Blaze.Each(function() {                                                                                // 7\n    return Spacebars.call(view.lookup(\"groups\"));                                                                     // 8\n  }, function() {                                                                                                     // 9\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"groupItem\")), \"\\n    \" ];                             // 10\n  }, function() {                                                                                                     // 11\n    return [ \"\\n      \", HTML.LI({                                                                                    // 12\n      class: \"placeholder\"                                                                                            // 13\n    }, Blaze.View(\"lookup:_\", function() {                                                                            // 14\n      return Spacebars.mustache(view.lookup(\"_\"), \"noGroup\");                                                         // 15\n    }), \" \"), \"\\n    \" ];                                                                                             // 16\n  }), \"\\n  \");                                                                                                        // 17\n}));                                                                                                                  // 18\n                                                                                                                      // 19\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.group_page.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/template.group_page.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"groupPage\");                                                                                    // 2\nTemplate[\"groupPage\"] = new Template(\"Template.groupPage\", (function() {                                              // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"main-content\"                                                                                             // 6\n  }, \"\\n    \", HTML.DIV({                                                                                             // 7\n    class: \"row\"                                                                                                      // 8\n  }, \"\\n      \", HTML.DIV({                                                                                           // 9\n    class: \"col-xs-12 col-md-6 col-md-offset-3\"                                                                       // 10\n  }, \"\\n        \", HTML.DIV({                                                                                         // 11\n    class: \"panel panel-default\"                                                                                      // 12\n  }, \"\\n          \", HTML.DIV({                                                                                       // 13\n    class: \"panel-heading\"                                                                                            // 14\n  }, HTML.SPAN({                                                                                                      // 15\n    class: \"title\"                                                                                                    // 16\n  }, Blaze.View(\"lookup:name\", function() {                                                                           // 17\n    return Spacebars.mustache(view.lookup(\"name\"));                                                                   // 18\n  }), \" \", Blaze.If(function() {                                                                                      // 19\n    return Spacebars.call(view.lookup(\"ownGroup\"));                                                                   // 20\n  }, function() {                                                                                                     // 21\n    return HTML.BUTTON({                                                                                              // 22\n      type: \"button\",                                                                                                 // 23\n      class: \"btn btn-danger delete\"                                                                                  // 24\n    }, \"Delete\");                                                                                                     // 25\n  }, function() {                                                                                                     // 26\n    return [ HTML.BUTTON({                                                                                            // 27\n      type: \"button\",                                                                                                 // 28\n      class: \"btn btn-danger quit\"                                                                                    // 29\n    }, \"Quit\"), \" \" ];                                                                                                // 30\n  }))), \"\\n          \", HTML.DIV({                                                                                    // 31\n    class: \"panel-body\"                                                                                               // 32\n  }, \"\\n            \", Blaze.Each(function() {                                                                        // 33\n    return Spacebars.call(view.lookup(\"members\"));                                                                    // 34\n  }, function() {                                                                                                     // 35\n    return [ \"\\n\\n            \", HTML.DIV({                                                                           // 36\n      class: \"input-group\"                                                                                            // 37\n    }, \"\\n              \", Blaze.View(\"lookup:.\", function() {                                                        // 38\n      return Spacebars.mustache(view.lookup(\".\"));                                                                    // 39\n    }), \"\\n              \", HTML.SPAN({                                                                               // 40\n      class: \"input-group-addon\",                                                                                     // 41\n      id: \"min-input\",                                                                                                // 42\n      role: \"button\"                                                                                                  // 43\n    }, HTML.B(\"-\")), \"\\n\\n            \"), \"\\n            \", HTML.BR(), \"\\n\\n            \" ];                          // 44\n  }), \"\\n            \", HTML.DIV({                                                                                    // 45\n    class: \"input-group\"                                                                                              // 46\n  }, HTML.Raw('<span class=\"input-group-addon\">@</span>'), \"\\n              \", HTML.INPUT({                           // 47\n    name: \"AddedMember\",                                                                                              // 48\n    type: \"email\",                                                                                                    // 49\n    \"parsley-type\": \"email\",                                                                                          // 50\n    value: function() {                                                                                               // 51\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                // 52\n    },                                                                                                                // 53\n    placeholder: \"member mail\",                                                                                       // 54\n    class: \"form-control\"                                                                                             // 55\n  }), \"\\n              \", HTML.Raw('<span class=\"input-group-addon\" id=\"add-member\" role=\"button\"><b>+</b></span>'), \"\\n            \"), \"\\n\\n            \", HTML.Raw(\"<br>\"), HTML.Raw(\"<br>\"), \"\\n            \", HTML.DIV({\n    class: \"text-center\"                                                                                              // 57\n  }, \"\\n              \", HTML.BUTTON({                                                                                // 58\n    type: \"button\",                                                                                                   // 59\n    class: \"btn btn-space btn-primary btn-rounded btn-lg\",                                                            // 60\n    id: \"open\"                                                                                                        // 61\n  }, \"\\n                \", HTML.A({                                                                                   // 62\n    style: \"color:#fff\",                                                                                              // 63\n    href: function() {                                                                                                // 64\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"create\");                                                    // 65\n    }                                                                                                                 // 66\n  }, HTML.Raw('<i class=\"icon icon-left s7-users\"></i>'), \" \", Blaze.View(\"lookup:_\", function() {                    // 67\n    return Spacebars.mustache(view.lookup(\"_\"), \"openMeeting\");                                                       // 68\n  })), \"\\n              \"), \"\\n            \"), \"\\n          \"), \"\\n          \", HTML.Raw('<div class=\"panel-heading\"></div>'), \"\\n          \", HTML.DIV({\n    class: \"panel-body\"                                                                                               // 70\n  }, \"\\n            \", HTML.SPAN(\" \", Blaze.View(\"lookup:_\", function() {                                             // 71\n    return Spacebars.mustache(view.lookup(\"_\"), \"managedBy\");                                                         // 72\n  }), \" \", Blaze.View(\"lookup:authorName\", function() {                                                               // 73\n    return Spacebars.mustache(view.lookup(\"authorName\"));                                                             // 74\n  }), \" - \", Blaze.View(\"lookup:authorAdress\", function() {                                                           // 75\n    return Spacebars.mustache(view.lookup(\"authorAdress\"));                                                           // 76\n  }), \" \"), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n  \");                                          // 77\n}));                                                                                                                  // 78\n                                                                                                                      // 79\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.group_submit.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/template.group_submit.js                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"groupSubmit\");                                                                                  // 2\nTemplate[\"groupSubmit\"] = new Template(\"Template.groupSubmit\", (function() {                                          // 3\n  var view = this;                                                                                                    // 4\n  return [ HTML.ASIDE({                                                                                               // 5\n    class: \"page-aside\"                                                                                               // 6\n  }, \"\\n    \", HTML.DIV({                                                                                             // 7\n    class: \"am-scroller nano has-scrollbar\"                                                                           // 8\n  }, \"\\n      \", HTML.DIV({                                                                                           // 9\n    class: \"nano-content\",                                                                                            // 10\n    tabindex: \"0\",                                                                                                    // 11\n    style: \"right: -17px;\"                                                                                            // 12\n  }, \"\\n        \", HTML.DIV({                                                                                         // 13\n    class: \"content\"                                                                                                  // 14\n  }, \"\\n          \", HTML.Raw(\"<h2>Menu</h2>\"), \"\\n          \", HTML.UL({                                             // 15\n    class: \"nav nav-pills nav-stacked\"                                                                                // 16\n  }, \"\\n            \", HTML.LI(HTML.A({                                                                               // 17\n    href: function() {                                                                                                // 18\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                // 19\n        route: \"groups\"                                                                                               // 20\n      }));                                                                                                            // 21\n    }                                                                                                                 // 22\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 23\n    return Spacebars.mustache(view.lookup(\"_\"), \"menuGroup\");                                                         // 24\n  }))), \"\\n            \", HTML.LI({                                                                                   // 25\n    class: \"active\"                                                                                                   // 26\n  }, HTML.A({                                                                                                         // 27\n    href: \"#\"                                                                                                         // 28\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 29\n    return Spacebars.mustache(view.lookup(\"_\"), \"createGroup\");                                                       // 30\n  }))), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.Raw('<div class=\"nano-pane\" style=\"display: none;\"><div class=\"nano-slider\" style=\"height: 268px; transform: translate(0px, 0px);\"></div></div>')), \"\\n    \"), \"\\n    \", HTML.DIV({\n    class: \"page-head\",                                                                                               // 32\n    style: \"left:250px\"                                                                                               // 33\n  }, \"\\n      \", HTML.H2(Blaze.View(\"lookup:_\", function() {                                                          // 34\n    return Spacebars.mustache(view.lookup(\"_\"), \"groupSubTitle\");                                                     // 35\n  })), \"\\n    \"), \"\\n    \", HTML.DIV({                                                                                // 36\n    class: \"main-content\"                                                                                             // 37\n  }, \"\\n      \", HTML.DIV({                                                                                           // 38\n    class: \"row\"                                                                                                      // 39\n  }, \"\\n        \", HTML.DIV({                                                                                         // 40\n    class: \"col-xs-12 col-md-8 col-md-offset-3\"                                                                       // 41\n  }, \"\\n          \", HTML.DIV({                                                                                       // 42\n    class: \"panel panel-default\"                                                                                      // 43\n  }, \"\\n            \", Blaze.If(function() {                                                                          // 44\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                // 45\n  }, function() {                                                                                                     // 46\n    return [ \"\\n            \", HTML.DIV({                                                                             // 47\n      class: \"panel-heading\"                                                                                          // 48\n    }, HTML.SPAN({                                                                                                    // 49\n      class: \"title\"                                                                                                  // 50\n    }, Blaze.View(\"lookup:_\", function() {                                                                            // 51\n      return Spacebars.mustache(view.lookup(\"_\"), \"groupSubmit\");                                                     // 52\n    }))), \"\\n            \", HTML.DIV({                                                                                // 53\n      class: \"panel-body\"                                                                                             // 54\n    }, \"\\n\\n              \", HTML.FORM({                                                                              // 55\n      class: \"main form page\"                                                                                         // 56\n    }, \"\\n                \", HTML.DIV({                                                                               // 57\n      class: \"form-group\"                                                                                             // 58\n    }, \"\\n                  \", HTML.LABEL({                                                                           // 59\n      class: \"control-label\",                                                                                         // 60\n      for: \"url\"                                                                                                      // 61\n    }, Blaze.View(\"lookup:_\", function() {                                                                            // 62\n      return Spacebars.mustache(view.lookup(\"_\"), \"name\");                                                            // 63\n    })), \"\\n                  \", HTML.DIV({                                                                           // 64\n      class: \"controls\"                                                                                               // 65\n    }, \"\\n                    \", HTML.INPUT({                                                                         // 66\n      name: \"name\",                                                                                                   // 67\n      id: \"groupName\",                                                                                                // 68\n      type: \"text\",                                                                                                   // 69\n      value: \"\",                                                                                                      // 70\n      placeholder: \"Group name\",                                                                                      // 71\n      class: \"form-control\"                                                                                           // 72\n    }), \"\\n                  \"), \"\\n                \"), \"\\n                \", HTML.DIV({                              // 73\n      class: \"form-group\"                                                                                             // 74\n    }, \"\\n                  \", HTML.LABEL({                                                                           // 75\n      class: \"control-label\",                                                                                         // 76\n      for: \"title\"                                                                                                    // 77\n    }, Blaze.View(\"lookup:_\", function() {                                                                            // 78\n      return Spacebars.mustache(view.lookup(\"_\"), \"members\");                                                         // 79\n    })), \"\\n                  \", HTML.DIV({                                                                           // 80\n      class: \"controls\"                                                                                               // 81\n    }, \"\\n                    \", HTML.SPAN(\" \", Blaze.View(\"lookup:_\", function() {                                   // 82\n      return Spacebars.mustache(view.lookup(\"_\"), \"addMembers\");                                                      // 83\n    }), \" \"), \"\\n                    \", HTML.SPAN({                                                                   // 84\n      class: \"glyphicon glyphicon-plus\",                                                                              // 85\n      id: \"add-input\",                                                                                                // 86\n      role: \"button\"                                                                                                  // 87\n    }), \"\\n                  \"), \"\\n                  \", HTML.Comment(\"\\n                  <a href=\\\"#\\\" id='add-input'>\\n                    Add Input\\n                  </a>\"), \"\\n\\n                  \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"inputs\"));                                                                   // 89\n    }, function() {                                                                                                   // 90\n      return [ \"\\n                  \", Spacebars.include(view.lookupTemplate(\"input\")), \"\\n                  \" ];     // 91\n    }), \"\\n                \"), \"\\n                \", HTML.INPUT({                                                     // 92\n      type: \"submit\",                                                                                                 // 93\n      value: \"Submit\",                                                                                                // 94\n      class: \"btn btn-primary\"                                                                                        // 95\n    }), \"\\n              \"), \"\\n            \"), \"\\n\\n            \" ];                                                 // 96\n  }, function() {                                                                                                     // 97\n    return [ \"\\n            \", HTML.DIV({                                                                             // 98\n      class: \"panel-body\"                                                                                             // 99\n    }, \"\\n              \", HTML.P({                                                                                   // 100\n      class: \"alert alert-warning\"                                                                                    // 101\n    }, HTML.SPAN({                                                                                                    // 102\n      class: \"glyphicon glyphicon-warning-sign\"                                                                       // 103\n    }), HTML.STRONG(Blaze.View(\"lookup:_\", function() {                                                               // 104\n      return Spacebars.mustache(view.lookup(\"_\"), \"warning\");                                                         // 105\n    })), Blaze.View(\"lookup:_\", function() {                                                                          // 106\n      return Spacebars.mustache(view.lookup(\"_\"), \"warningLogInfo\");                                                  // 107\n    })), \"\\n            \"), \"\\n            \" ];                                                                       // 108\n  }), \"\\n\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \") ];                                                     // 109\n}));                                                                                                                  // 110\n                                                                                                                      // 111\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.groups.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/template.groups.js                                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"groups\");                                                                                       // 2\nTemplate[\"groups\"] = new Template(\"Template.groups\", (function() {                                                    // 3\n  var view = this;                                                                                                    // 4\n  return [ HTML.ASIDE({                                                                                               // 5\n    class: \"page-aside\"                                                                                               // 6\n  }, \"\\n    \", HTML.DIV({                                                                                             // 7\n    class: \"am-scroller nano has-scrollbar\"                                                                           // 8\n  }, \"\\n      \", HTML.DIV({                                                                                           // 9\n    class: \"nano-content\",                                                                                            // 10\n    tabindex: \"0\",                                                                                                    // 11\n    style: \"right: -17px;\"                                                                                            // 12\n  }, \"\\n        \", HTML.DIV({                                                                                         // 13\n    class: \"content\"                                                                                                  // 14\n  }, \"\\n          \", HTML.H2(Blaze.View(\"lookup:_\", function() {                                                      // 15\n    return Spacebars.mustache(view.lookup(\"_\"), \"menu\");                                                              // 16\n  })), \"\\n          \", HTML.UL({                                                                                      // 17\n    class: \"nav nav-pills nav-stacked\"                                                                                // 18\n  }, \"\\n            \", HTML.LI({                                                                                      // 19\n    class: \"active\"                                                                                                   // 20\n  }, HTML.A({                                                                                                         // 21\n    href: \"#\"                                                                                                         // 22\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 23\n    return Spacebars.mustache(view.lookup(\"_\"), \"menuGroup\");                                                         // 24\n  }))), \"\\n            \", HTML.LI(HTML.A({                                                                            // 25\n    href: function() {                                                                                                // 26\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                // 27\n        route: \"groupSubmit\"                                                                                          // 28\n      }));                                                                                                            // 29\n    }                                                                                                                 // 30\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 31\n    return Spacebars.mustache(view.lookup(\"_\"), \"createGroup\");                                                       // 32\n  }))), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.Raw('<div class=\"nano-pane\" style=\"display: none;\"><div class=\"nano-slider\" style=\"height: 268px; transform: translate(0px, 0px);\"></div></div>')), \"\\n    \"), \"\\n    \", HTML.DIV({\n    class: \"page-head\",                                                                                               // 34\n    style: \"left:250px\"                                                                                               // 35\n  }, \"\\n      \", HTML.H2(Blaze.View(\"lookup:_\", function() {                                                          // 36\n    return Spacebars.mustache(view.lookup(\"_\"), \"groupTitle\");                                                        // 37\n  })), \"\\n    \"), \"\\n    \", HTML.DIV({                                                                                // 38\n    class: \"main-content\"                                                                                             // 39\n  }, \"\\n      \", HTML.DIV({                                                                                           // 40\n    class: \"row\"                                                                                                      // 41\n  }, \"\\n        \", HTML.DIV({                                                                                         // 42\n    class: \"col-xs-12 col-md-8 col-md-offset-3\"                                                                       // 43\n  }, \"\\n\\n\\n          \", HTML.DIV({                                                                                   // 44\n    class: \"panel panel-default\"                                                                                      // 45\n  }, \"\\n            \", Blaze.If(function() {                                                                          // 46\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                // 47\n  }, function() {                                                                                                     // 48\n    return [ \"\\n            \", HTML.DIV({                                                                             // 49\n      class: \"panel-heading\"                                                                                          // 50\n    }, HTML.SPAN({                                                                                                    // 51\n      class: \"title\"                                                                                                  // 52\n    }, Blaze.View(\"lookup:_\", function() {                                                                            // 53\n      return Spacebars.mustache(view.lookup(\"_\"), \"groupBodyTitle\");                                                  // 54\n    }))), \"\\n\\n            \", HTML.DIV({                                                                              // 55\n      class: \"panel-body\"                                                                                             // 56\n    }, \"\\n              \", HTML.U(\" \", Blaze.View(\"lookup:_\", function() {                                            // 57\n      return Spacebars.mustache(view.lookup(\"_\"), \"groupInfo\");                                                       // 58\n    })), \"\\n              \", HTML.BR(), HTML.BR(), HTML.BR(), \"\\n              \", Spacebars.include(view.lookupTemplate(\"groupsList\")), \"\\n            \"), \"\\n\\n\\n            \" ];\n  }, function() {                                                                                                     // 60\n    return [ \"\\n            \", HTML.DIV({                                                                             // 61\n      class: \"panel-body\"                                                                                             // 62\n    }, \"\\n              \", HTML.P({                                                                                   // 63\n      class: \"alert alert-warning\"                                                                                    // 64\n    }, HTML.SPAN({                                                                                                    // 65\n      class: \"glyphicon glyphicon-warning-sign\"                                                                       // 66\n    }), HTML.STRONG(Blaze.View(\"lookup:_\", function() {                                                               // 67\n      return Spacebars.mustache(view.lookup(\"_\"), \"warning\");                                                         // 68\n    })), Blaze.View(\"lookup:_\", function() {                                                                          // 69\n      return Spacebars.mustache(view.lookup(\"_\"), \"warningLogInfo\");                                                  // 70\n    })), \"\\n            \"), \"\\n            \" ];                                                                       // 71\n  }), \"\\n\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \") ];                                                     // 72\n}));                                                                                                                  // 73\n                                                                                                                      // 74\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group_item.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/group_item.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.groupItem.helpers({                                                                                          // 1\n  ownGroup: function () {                                                                                             // 2\n    return this.userId === Meteor.userId();                                                                           // 3\n  },                                                                                                                  // 4\n  partGroup: function () {                                                                                            // 5\n    var res = 0;                                                                                                      // 6\n                                                                                                                      //\n    if (this.userId === Meteor.userId()) {                                                                            // 7\n      res = 1;                                                                                                        // 8\n    } else {                                                                                                          // 9\n      for (i = 0; i < this.members.length; i++) {                                                                     // 11\n        if (this.members[i] === Meteor.user().emails[0].address) {                                                    // 12\n          res = 1;                                                                                                    // 13\n          i = this.members.length;                                                                                    // 14\n        }                                                                                                             // 15\n      }                                                                                                               // 16\n    }                                                                                                                 // 17\n                                                                                                                      //\n    return res;                                                                                                       // 18\n  }                                                                                                                   // 19\n});                                                                                                                   // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group_list.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/group_list.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.groupsList.helpers({                                                                                         // 1\n  groups: function () {                                                                                               // 2\n    return Groups.find();                                                                                             // 3\n  }                                                                                                                   // 4\n});                                                                                                                   // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group_page.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/group_page.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.groupPage.helpers({                                                                                          // 1\n  ownGroup: function () {                                                                                             // 2\n    return this.userId === Meteor.userId();                                                                           // 3\n  },                                                                                                                  // 4\n  partGroup: function () {                                                                                            // 5\n    var res = 0;                                                                                                      // 6\n                                                                                                                      //\n    if (this.userId === Meteor.userId()) {                                                                            // 7\n      res = 1;                                                                                                        // 8\n    } else {                                                                                                          // 9\n      for (i = 0; i < this.members.length; i++) {                                                                     // 11\n        if (this.members[i] === Meteor.user().emails[0].address) {                                                    // 12\n          res = 1;                                                                                                    // 13\n          i = this.members.length;                                                                                    // 14\n        }                                                                                                             // 15\n      }                                                                                                               // 16\n    }                                                                                                                 // 17\n                                                                                                                      //\n    return res;                                                                                                       // 18\n  }                                                                                                                   // 19\n});                                                                                                                   // 1\nTemplate.groupPage.events({                                                                                           // 22\n  'click .delete': function (e) {                                                                                     // 24\n    e.preventDefault();                                                                                               // 25\n                                                                                                                      //\n    if (confirm(\"Delete this group?\")) {                                                                              // 27\n      var currentGroupId = this._id;                                                                                  // 28\n      Groups.remove(currentGroupId);                                                                                  // 29\n      Router.go('groups');                                                                                            // 30\n    }                                                                                                                 // 32\n  },                                                                                                                  // 33\n  'click .quit': function (e) {                                                                                       // 34\n    e.preventDefault();                                                                                               // 35\n                                                                                                                      //\n    if (confirm(\"Do you want to leave this group?\")) {                                                                // 37\n      var currentGroupId = this._id;                                                                                  // 38\n      var member = Meteor.user().emails[0].address;                                                                   // 39\n      Groups.update(currentGroupId, {                                                                                 // 40\n        $pull: {                                                                                                      // 40\n          members: member                                                                                             // 40\n        }                                                                                                             // 40\n      });                                                                                                             // 40\n      Router.go('groups');                                                                                            // 41\n    }                                                                                                                 // 43\n  },                                                                                                                  // 44\n  'click #min-input': function (e) {                                                                                  // 45\n    e.preventDefault();                                                                                               // 48\n                                                                                                                      //\n    if (confirm(\"Do you want to kik \" + this + \" ?\")) {                                                               // 50\n      var parentId = Template.parentData(1)._id;                                                                      // 51\n                                                                                                                      //\n      var target = \"\" + this; //  console.log(\"taille parent : \"+Template.parentData(1).members.length);              // 52\n                                                                                                                      //\n      console.log(target);                                                                                            // 56\n      Groups.update({                                                                                                 // 57\n        _id: parentId                                                                                                 // 57\n      }, {                                                                                                            // 57\n        $pull: {                                                                                                      // 57\n          members: target                                                                                             // 57\n        }                                                                                                             // 57\n      }); //alert(\"member removed!\");                                                                                 // 57\n    }                                                                                                                 // 59\n  },                                                                                                                  // 61\n  'click #add-member': function (e) {                                                                                 // 62\n    e.preventDefault(); //Récupération des éléments DOM des champs de saisie                                          // 63\n                                                                                                                      //\n    var currentGroupId = this._id;                                                                                    // 65\n    var AddedMember = document.querySelector('[name=AddedMember]');                                                   // 67\n    Groups.update(currentGroupId, {                                                                                   // 69\n      $push: {                                                                                                        // 69\n        members: AddedMember.value                                                                                    // 69\n      }                                                                                                               // 69\n    });                                                                                                               // 69\n    AddedMember.value = \"\";                                                                                           // 71\n  },                                                                                                                  // 72\n  'click #open': function (e) {                                                                                       // 73\n    Router.go('create', this);                                                                                        // 74\n  }                                                                                                                   // 75\n});                                                                                                                   // 22\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group_submit.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/group/group_submit.js                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.groupSubmit.onCreated(function () {                                                                          // 1\n  Session.set('inputs', []); // on page load, set this to have no inputs                                              // 2\n});                                                                                                                   // 3\nTemplate.groupSubmit.helpers({                                                                                        // 5\n  inputs: function () {                                                                                               // 6\n    return Session.get('inputs'); // reactively watches the Session variable, so when it changes, this result will change and our template will change\n  }                                                                                                                   // 8\n}); // Now we'll set up a click handler to add inputs to our array when we   click the \"add\" button                   // 5\n                                                                                                                      //\nTemplate.groupSubmit.events({                                                                                         // 12\n  'click #add-input': function () {                                                                                   // 13\n    var inputs = Session.get('inputs');                                                                               // 15\n    var uniqid = Math.floor(Math.random() * 100000); // Give a unique ID so you can pull _this_ input when you click remove\n                                                                                                                      //\n    inputs.push({                                                                                                     // 17\n      uniqid: uniqid,                                                                                                 // 17\n      value: \"\"                                                                                                       // 17\n    });                                                                                                               // 17\n    Session.set('inputs', inputs);                                                                                    // 18\n  },                                                                                                                  // 19\n  'submit form': function (e) {                                                                                       // 21\n    e.preventDefault(); //Récupération des éléments DOM des champs de saisie                                          // 22\n                                                                                                                      //\n    var membersInputs = $(e.target).find('[name=member]'); //Récupération des valeurs de l'ordre du jour, temps estimés et des emails d'invitation\n                                                                                                                      //\n    var name = [];                                                                                                    // 28\n    ;                                                                                                                 // 28\n    var members = [];                                                                                                 // 29\n                                                                                                                      //\n    for (i = 0; i < membersInputs.length; i++) {                                                                      // 32\n      if (membersInputs[i].value != \"\") {                                                                             // 33\n        members.push(membersInputs[i].value);                                                                         // 34\n      }                                                                                                               // 35\n    } //  name.push(nameInput[0].value);                                                                              // 36\n                                                                                                                      //\n                                                                                                                      //\n    var group = {                                                                                                     // 40\n      name: $(e.target).find('[name=name]').val(),                                                                    // 41\n      members: members                                                                                                // 42\n    };                                                                                                                // 40\n    Meteor.call('groupInsert', group, function (error, result) {                                                      // 45\n      // affiche l'erreur à l'utilisateur et s'interrompt                                                             // 46\n      if (error) return alert(error.reason);                                                                          // 47\n      Router.go('groups', {                                                                                           // 49\n        _id: result._id                                                                                               // 49\n      });                                                                                                             // 49\n    });                                                                                                               // 50\n  }                                                                                                                   // 51\n}); // We also need handlers for when the inputs themselves are changed / removed                                     // 12\n                                                                                                                      //\nTemplate.input.events({                                                                                               // 58\n  'click #remove-input': function (event) {                                                                           // 59\n    var uniqid = $(event.currentTarget).attr('uniqid');                                                               // 60\n    inputs = Session.get('inputs');                                                                                   // 61\n    inputs = _.filter(inputs, function (x) {                                                                          // 62\n      return x.uniqid != uniqid;                                                                                      // 62\n    });                                                                                                               // 62\n    Session.set('inputs', inputs);                                                                                    // 63\n  } /*,                                                                                                               // 64\n    'change input': function(event) {                                                                                 //\n     var $input = $(event.currentTarget);                                                                             //\n     var uniqid = $input.attr('uniqid');                                                                              //\n     inputs = Session.get('inputs');                                                                                  //\n     index = inputs.findIndex(function(x) { return x.uniqid == uniqid; });                                            //\n     inputs[index].value = $input.val();                                                                              //\n     Session.set('inputs', inputs);                                                                                   //\n    }*/                                                                                                               //\n});                                                                                                                   // 58\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.layout.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/template.layout.js                                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"layout\");                                                                                       // 2\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {                                                    // 3\n  var view = this;                                                                                                    // 4\n  return [ HTML.HEAD(\"\\n    \", HTML.Raw('<meta charset=\"utf-8\">'), \"\\n    \", HTML.Raw('<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">'), \"\\n    \", HTML.Raw('<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">'), \"\\n    \", HTML.Raw('<meta name=\"description\" content=\"TakeTalk is an application to manage your meetings by coordinate time speech\">'), \"\\n    \", HTML.Raw('<link rel=\"icon\" href=\"/favicon.ico\">'), \"\\n    \", HTML.TITLE(Blaze.View(\"lookup:_\", function() {\n    return Spacebars.mustache(view.lookup(\"_\"), \"mainTitle\");                                                         // 6\n  })), \"\\n\\n  \"), \"\\n  \", HTML.BODY({                                                                                 // 7\n    \"cz-shortcut-listen\": \"true\"                                                                                      // 8\n  }, \"\\n\\n    \", HTML.DIV({                                                                                           // 9\n    class: \"am-wrapper am-nosidebar-left\"                                                                             // 10\n  }, \"\\n      \", HTML.NAV({                                                                                           // 11\n    class: \"navbar navbar-default navbar-fixed-top am-top-header\"                                                     // 12\n  }, \"\\n        \", HTML.DIV({                                                                                         // 13\n    class: \"container-fluid\"                                                                                          // 14\n  }, \"\\n          \", HTML.DIV({                                                                                       // 15\n    class: \"navbar-header\"                                                                                            // 16\n  }, \"\\n            \", HTML.DIV({                                                                                     // 17\n    class: \"page-title\"                                                                                               // 18\n  }, \"\\n              \", HTML.A({                                                                                     // 19\n    href: function() {                                                                                                // 20\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                // 21\n        route: \"home\"                                                                                                 // 22\n      }));                                                                                                            // 23\n    },                                                                                                                // 24\n    class: \"navbar-brand title-font\"                                                                                  // 25\n  }, \"\\n                \", HTML.Raw('<img src=\"/LOGO.png\" height=\"\" width=\"100%\" style=\"display:inline\">')), \"\\n            \"), \"\\n          \"), \"\\n          \", HTML.Raw('<a href=\"#\" data-toggle=\"collapse\" data-target=\"#am-navbar-collapse\" class=\"am-toggle-top-header-menu collapsed\">\\n            <span class=\"glyphicon glyphicon-menu-hamburger\"></span>\\n          </a>'), \"\\n          \", HTML.DIV({\n    id: \"am-navbar-collapse\",                                                                                         // 27\n    class: \"collapse navbar-collapse\"                                                                                 // 28\n  }, \"\\n            \", HTML.UL({                                                                                      // 29\n    class: \"nav navbar-nav am-nav-center\"                                                                             // 30\n  }, \"\\n              \", HTML.LI(HTML.A({                                                                             // 31\n    href: function() {                                                                                                // 32\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                // 33\n        route: \"home\"                                                                                                 // 34\n      }));                                                                                                            // 35\n    }                                                                                                                 // 36\n  }, HTML.Raw('<span class=\"glyphicon glyphicon-home\" aria-hidden=\"true\"></span>'))), \"\\n              \", HTML.Raw(\"<!-- <li><a href=\\\"{{pathFor route='tutorial'}}\\\">Tutorial</a></li>\\n              <li><a href=\\\"{{pathFor route='downloads'}}\\\">Downloads</a></li> -->\"), \"\\n              \", HTML.Raw(\"<!-- langue-->\"), \"\\n              \", HTML.LI(HTML.A({\n    href: function() {                                                                                                // 38\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                // 39\n        route: \"groups\"                                                                                               // 40\n      }));                                                                                                            // 41\n    }                                                                                                                 // 42\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 43\n    return Spacebars.mustache(view.lookup(\"_\"), \"groups\");                                                            // 44\n  }))), \"\\n              \", HTML.LI({                                                                                 // 45\n    class: \"dropdown\"                                                                                                 // 46\n  }, \"\\n                \", HTML.A({                                                                                   // 47\n    href: \"#\",                                                                                                        // 48\n    \"data-toggle\": \"dropdown\",                                                                                        // 49\n    role: \"button\",                                                                                                   // 50\n    \"aria-expanded\": \"false\",                                                                                         // 51\n    class: \"dropdown-toggle\"                                                                                          // 52\n  }, Blaze.View(\"lookup:_\", function() {                                                                              // 53\n    return Spacebars.mustache(view.lookup(\"_\"), \"lang\");                                                              // 54\n  }), \"\\n                  \", HTML.Raw('<span class=\"glyphicon glyphicon-globe\" aria-hidden=\"true\"></span>'), \"\\n                \"), \"\\n                \", HTML.UL({\n    role: \"menu\",                                                                                                     // 56\n    class: \"dropdown-menu\"                                                                                            // 57\n  }, \"\\n                  \", HTML.LI(Spacebars.include(view.lookupTemplate(\"i18n_buttons\"))), \"\\n                \"), \"\\n              \"), \"\\n              \", HTML.Raw(\"<!--fin -->\"), \"\\n\\n              \"), \"\\n              \", HTML.LI({\n    class: \"nav navbar-nav navbar-right\"                                                                              // 59\n  }, \"\\n                \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n              \"), \"\\n          \"), \"\\n\\n\\n          \", HTML.Raw('<div class=\"collapse navbar-collapse\" id=\"navigation\">\\n            <ul class=\"nav navbar-nav navbar-right\">\\n            </ul>\\n          </div>'), \"\\n        \"), \"\\n      \"), \"\\n\\n\\n      \", HTML.DIV({\n    class: \"am-content\"                                                                                               // 61\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n      \"), \"\\n      \", HTML.Raw(\"<footer>\\n        <p>\\n          <!-- Ici ajout d'informations pour le footer (plan du site, formulaire de contact, copyrights....) -->\\n        </p>\\n      </footer>\"), \"\\n    \"), \"\\n    \", HTML.SCRIPT({\n    type: \"text/javascript\"                                                                                           // 63\n  }, \"\\n\\n\"), \"\\n  \") ];                                                                                              // 64\n}));                                                                                                                  // 65\n                                                                                                                      // 66\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"helpers\":{\"config.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/helpers/config.js                                                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nAccounts.ui.config({                                                                                                  // 1\n    passwordSignupFields: 'USERNAME_AND_EMAIL',                                                                       // 2\n    extraSignupFields: [{                                                                                             // 3\n        fieldName: 'last-name',                                                                                       // 5\n        fieldLabel: 'Last name',                                                                                      // 6\n        inputType: 'text',                                                                                            // 7\n        visible: true                                                                                                 // 8\n    }, {                                                                                                              // 4\n        fieldName: 'meetingId',                                                                                       // 11\n        fieldLabel: 'meetingId',                                                                                      // 12\n        inputType: 'text',                                                                                            // 13\n        visible: false                                                                                                // 14\n    }]                                                                                                                // 10\n});                                                                                                                   // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"js\":{\"create.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/js/create.js                                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.create.events({                                                                                              // 3\n  //Création d'un nouveau champ de saisie lorsqu'un caractère est renseigné                                           // 4\n  'keyup .participant-email-input': function (e) {                                                                    // 5\n    var input = $(e.target);                                                                                          // 6\n                                                                                                                      //\n    if (input.val().length > 0) {                                                                                     // 7\n      var rank = input.parents(\".participant-email\")[0].getAttribute('rank');                                         // 8\n      var form = input.parents(\"#create-form\");                                                                       // 9\n      var nextRank = parseInt(rank) + 1;                                                                              // 10\n                                                                                                                      //\n      if ($(form).find('.participant-email[rank=\"' + nextRank + '\"]').length < 1) {                                   // 12\n        var newInput = $(input.parents(\".participant-email\")[0].cloneNode(true));                                     // 13\n        newInput.find(\".participant-email-input\").val(\"\");                                                            // 14\n        newInput.attr('rank', nextRank);                                                                              // 15\n        $(input.parents(\".participant-email-group\")[0]).append(newInput);                                             // 16\n      }                                                                                                               // 17\n    }                                                                                                                 // 18\n  },                                                                                                                  // 19\n  'submit form': function (e) {                                                                                       // 22\n    e.preventDefault(); //Récupération des éléments DOM des champs de saisie                                          // 23\n                                                                                                                      //\n    var ordreInputs = e.target.ordreDuJour;                                                                           // 25\n    var ordreTimeInputs = e.target.ordreDuJourTemps;                                                                  // 26\n    var participantsInputs = e.target.participantsEmails; //Récupération des valeurs de l'ordre du jour, temps estimés et des emails d'invitation\n                                                                                                                      //\n    var ordres = [];                                                                                                  // 30\n    var ordreTimes = [];                                                                                              // 31\n    var participantsEmails = [];                                                                                      // 32\n    var participantActivity = []; //Récupération des éléments DOM des champs de saisie                                // 33\n                                                                                                                      //\n    var participantsInputs = $(e.target).find('[name=participantsEmails]');                                           // 36\n                                                                                                                      //\n    for (i = 0; i < participantsInputs.length; i++) {                                                                 // 40\n      if (participantsInputs[i].value != \"\") {                                                                        // 41\n        participantsEmails.push(participantsInputs[i].value);                                                         // 42\n        participantActivity.push(false);                                                                              // 43\n      }                                                                                                               // 44\n    } //Création du meeting                                                                                           // 45\n    //voir comment rajouter des personnes au meeting                                                                  // 48\n    //idée : création d'un tableau qui est rempli en faisant Meteor.user().mettingId = meetingId                      // 49\n                                                                                                                      //\n                                                                                                                      //\n    var meeting = {                                                                                                   // 51\n      name: e.target.meetingName.value,                                                                               // 52\n      duration: e.target.meetingDuration.value,                                                                       // 53\n      animatorName: e.target.animatorName.value,                                                                      // 54\n      animatorMail: e.target.animatorEmail.value,                                                                     // 55\n      participantsEmails: participantsEmails,                                                                         // 56\n      participantActivity: participantActivity,                                                                       // 57\n      status: 'ongoing',                                                                                              // 58\n      ordres: ordres,                                                                                                 // 59\n      ordreTimes: ordreTimes,                                                                                         // 60\n      speaker: e.target.animatorEmail.value                                                                           // 61\n    };                                                                                                                // 51\n    Meteor.call('meetingInsert', meeting, function (error, result) {                                                  // 64\n      // affiche l'erreur à l'utilisateur et s'interrompt                                                             // 65\n      if (error) return alert(error.reason);                                                                          // 66\n      var meetingId = result._id;                                                                                     // 69\n      var emailBody = 'Here is the link for the meeting : taketalk.meteor.com/join/' + meetingId + '\\n';              // 71\n      Meteor.call('sendEmail', e.target.animatorEmail.value, 'noreply@taketalk.com', 'TakeTalk session created', 'You have just created a session of TakeTalk. \\n\\n' + emailBody);\n                                                                                                                      //\n      for (var i = 0; i < participantsEmails.length; i++) {                                                           // 80\n        Meteor.call('sendEmail', participantsEmails[i], 'noreply@taketalk.com', 'TakeTalk invitation', 'You are invited to a session of TakeTalk. \\n\\n' + emailBody);\n      }                                                                                                               // 84\n                                                                                                                      //\n      console.log(\"mail envoyé\"); //Redirection vers la page du meeting                                               // 86\n                                                                                                                      //\n      Router.go('/meeting/' + meetingId);                                                                             // 88\n    });                                                                                                               // 90\n  }                                                                                                                   // 91\n});                                                                                                                   // 3\nTemplate.create.onRendered(function () {                                                                              // 94\n  if (Meteor.userId() != null) {                                                                                      // 95\n    $(' #animatorName').val(Meteor.user().username);                                                                  // 96\n    $(' #animatorEmail').val(Meteor.user().emails[0].address);                                                        // 97\n  }                                                                                                                   // 98\n                                                                                                                      //\n  ;                                                                                                                   // 98\n});                                                                                                                   // 99\nTemplate.tempName.onRendered(function () {                                                                            // 100\n  var d = new Date();                                                                                                 // 102\n  d.setHours(0, 0, 0);                                                                                                // 103\n  $('.datetimepicker').datetimepicker({                                                                               // 104\n    format: 'HH:mm',                                                                                                  // 105\n    defaultDate: d //  defaultViewDate : {hours : 00, minutes: 00}                                                    // 106\n                                                                                                                      //\n  });                                                                                                                 // 104\n});                                                                                                                   // 109\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"home.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/js/home.js                                                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.home.events({                                                                                                // 1\n    //Redirection vers la page de création de meeting                                                                 // 2\n    'click #open': function (e) {                                                                                     // 3\n        Router.go('create');                                                                                          // 4\n    }                                                                                                                 // 5\n});                                                                                                                   // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meeting.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/js/meeting.js                                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n//import { Template } from 'meteor/templating';                                                                       // 1\n//import { ReactiveVar } from 'meteor/reactive-var';                                                                  // 2\nvar sortableList;                                                                                                     // 4\nvar meeting; //Template.meeting.isTrue = true;                                                                        // 5\n//console.log(Template.meeting.isTrue);                                                                               // 8\n                                                                                                                      //\nPresence.state = function () {                                                                                        // 10\n  return {                                                                                                            // 11\n    online: true,                                                                                                     // 12\n    currentRoomId: Session.get('currentRoomId')                                                                       // 13\n  };                                                                                                                  // 11\n};                                                                                                                    // 15\n                                                                                                                      //\nTemplate.meeting.helpers({                                                                                            // 18\n  users: function () {                                                                                                // 19\n    // exclude the currentUser                                                                                        // 20\n    var userIds = Presences.find().map(function (presence) {                                                          // 21\n      return presence.userId;                                                                                         // 21\n    });                                                                                                               // 21\n    var userPres = Presences.find().map(function (presence) {                                                         // 22\n      if (presence.state.currentRoomId === Session.get('currentRoomId')) return presence.userId;                      // 23\n    }); /*                                                                                                            // 25\n        console.log(\"je suis connecté  \" +userIds);                                                                   //\n        console.log(\"je suis ici  \" + userPres);*/                                                                    //\n    return Meteor.users.find({                                                                                        // 29\n      _id: {                                                                                                          // 29\n        $in: userPres,                                                                                                // 29\n        $ne: Meteor.userId()                                                                                          // 29\n      }                                                                                                               // 29\n    });                                                                                                               // 29\n  },                                                                                                                  // 30\n  getSpeaker: function () {                                                                                           // 32\n    meeting = Session.get(\"meeting\");                                                                                 // 33\n    var speaker = Meetings.findOne({                                                                                  // 34\n      _id: meeting._id                                                                                                // 34\n    }).speaker;                                                                                                       // 34\n    Session.set(\"speaker\", speaker);                                                                                  // 35\n  },                                                                                                                  // 37\n  isSpeaker: function () {                                                                                            // 39\n    meeting = Session.get(\"meeting\");                                                                                 // 40\n    speaker = Session.get(\"speaker\");                                                                                 // 41\n    var mail;                                                                                                         // 42\n    if (this.animatorMail) mail = this.animatorMail;else mail = \"\" + this;                                            // 43\n    return Meetings.findOne({                                                                                         // 47\n      _id: meeting._id                                                                                                // 47\n    }).speaker === mail;                                                                                              // 47\n  },                                                                                                                  // 48\n  isAsking: function () {                                                                                             // 51\n    meeting = Session.get(\"meeting\");                                                                                 // 52\n    var mail;                                                                                                         // 53\n    if (this.animatorMail) mail = this.animatorMail;else mail = \"\" + this;                                            // 54\n    return Speeches.find({                                                                                            // 58\n      myMeetingId: meeting._id,                                                                                       // 58\n      speakers: mail                                                                                                  // 58\n    }).count();                                                                                                       // 58\n  },                                                                                                                  // 59\n  /*                                                                                                                  // 62\n    onLoad:function(){                                                                                                //\n      var meeting = this;                                                                                             //\n      Session.set(\"meeting\",this);                                                                                    //\n      Session.set('currentRoomId',this._id);                                                                          //\n      var idMeeting=this._id;                                                                                         //\n      var meetingParticipant= this.participantsEmails;                                                                //\n      var meetingParticipantActivity = this.participantActivity;                                                      //\n                                                                                                                      //\n    },                                                                                                                //\n  */ownMeeting: function () {                                                                                         //\n    meeting = Session.get(\"meeting\");                                                                                 // 74\n    return meeting.animatorMail === Meteor.user().emails[0].address;                                                  // 75\n  },                                                                                                                  // 76\n  partMeeting: function () {                                                                                          // 77\n    var res = 0;                                                                                                      // 78\n                                                                                                                      //\n    if (this.animatorMail === Meteor.user().emails[0].address) {                                                      // 79\n      res = 1;                                                                                                        // 80\n    } else {                                                                                                          // 81\n      var mail = \"\" + this;                                                                                           // 83\n      if (mail === Meteor.user().emails[0].address) res = 1;                                                          // 84\n      meeting = Session.get(\"meeting\"); /*                                                                            // 87\n                                              for(i=0;i<meeting.participantsEmails.length;i++){                       //\n                                                if(meeting.participantsEmails[i]===Meteor.user().emails[0].address){  //\n                                                                                                                      //\n                                                  Meetings.update(idMeeting,{$set: {\"meetingParticipantActivity[i]\": true}});\n                                                                                                                      //\n                                                  i=this.participantsEmails.length;                                   //\n                                                }                                                                     //\n                                              }                                                                       //\n                                        */                                                                            //\n    }                                                                                                                 // 99\n                                                                                                                      //\n    return res;                                                                                                       // 101\n  }                                                                                                                   // 102\n});                                                                                                                   // 18\nTemplate.meeting.events({                                                                                             // 105\n  'click #speakControl': function (e) {                                                                               // 106\n    console.log(meeting._id);                                                                                         // 107\n    meeting = Session.get(\"meeting\");                                                                                 // 108\n    speeches = Speeches.findOne({                                                                                     // 109\n      myMeetingId: meeting._id                                                                                        // 109\n    });                                                                                                               // 109\n                                                                                                                      //\n    if (this.animatorMail) {                                                                                          // 110\n      Meetings.update(meeting._id, {                                                                                  // 111\n        $set: {                                                                                                       // 111\n          speaker: this.animatorMail                                                                                  // 111\n        }                                                                                                             // 111\n      });                                                                                                             // 111\n    } else {                                                                                                          // 112\n      var mail = \"\" + this;                                                                                           // 114\n      Meetings.update(meeting._id, {                                                                                  // 115\n        $set: {                                                                                                       // 115\n          speaker: mail                                                                                               // 115\n        }                                                                                                             // 115\n      });                                                                                                             // 115\n      Speeches.update(speeches._id, {                                                                                 // 116\n        $pull: {                                                                                                      // 116\n          speakers: mail                                                                                              // 116\n        }                                                                                                             // 116\n      });                                                                                                             // 116\n    }                                                                                                                 // 117\n  },                                                                                                                  // 119\n  'click #speakAsk': function (e) {                                                                                   // 121\n    meeting = Session.get(\"meeting\");                                                                                 // 122\n    speeches = Speeches.findOne({                                                                                     // 123\n      myMeetingId: meeting._id                                                                                        // 123\n    });                                                                                                               // 123\n    var mail = \"\" + this;                                                                                             // 127\n    Speeches.update(speeches._id, {                                                                                   // 128\n      $push: {                                                                                                        // 128\n        speakers: mail                                                                                                // 128\n      }                                                                                                               // 128\n    });                                                                                                               // 128\n  },                                                                                                                  // 129\n  'click #talkCancel': function (e) {                                                                                 // 132\n    console.log(\"I click on Talk\"); //à modifier                                                                      // 133\n                                                                                                                      //\n    var userId = Meteor.user().username;                                                                              // 135\n    var meetingId = Meteor.user().meeting;                                                                            // 136\n    var rank = 1;                                                                                                     // 137\n    console.log(\"userId = \" + userId);                                                                                // 138\n    console.log(\"meeting = \" + meetingId);                                                                            // 139\n  },                                                                                                                  // 140\n  /** A click on waitProceed starts or stops the timer */'click #waitProceed': function (e) {                         // 143\n    //Arret du timer                                                                                                  // 145\n    if (e.target.value == \"Wait\") {                                                                                   // 146\n      Meteor.clearInterval(timerId);                                                                                  // 147\n      Speeches.update(Speeches.findOne({                                                                              // 148\n        meeting: Session.get(\"meetingId\"),                                                                            // 149\n        status: \"ongoing\"                                                                                             // 149\n      })._id, {                                                                                                       // 149\n        $set: {                                                                                                       // 150\n          status: \"pending\"                                                                                           // 150\n        }                                                                                                             // 150\n      });                                                                                                             // 150\n    } else {                                                                                                          // 152\n      Speeches.update(Speeches.findOne({                                                                              // 153\n        meeting: Session.get(\"meetingId\"),                                                                            // 154\n        status: \"pending\"                                                                                             // 154\n      }, {                                                                                                            // 154\n        sort: {                                                                                                       // 154\n          rank: 1                                                                                                     // 154\n        }                                                                                                             // 154\n      })._id, {                                                                                                       // 154\n        $set: {                                                                                                       // 155\n          status: \"ongoing\"                                                                                           // 155\n        }                                                                                                             // 155\n      }); //Lancement du timer                                                                                        // 155\n                                                                                                                      //\n      timerId = Meteor.setInterval(function () {                                                                      // 159\n        var currentSpeech = Speeches.findOne({                                                                        // 160\n          meeting: Session.get(\"meetingId\"),                                                                          // 160\n          status: \"ongoing\"                                                                                           // 160\n        });                                                                                                           // 160\n        var user = Users.findOne({                                                                                    // 161\n          _id: currentSpeech.user                                                                                     // 161\n        });                                                                                                           // 161\n        var paroles = [];                                                                                             // 162\n        var time = 1; //Incrémentation du compteur associé a l'ordre du speech                                        // 163\n                                                                                                                      //\n        if (user.paroles === undefined) {                                                                             // 166\n          paroles.push({                                                                                              // 167\n            \"order\": currentSpeech.orderChoose,                                                                       // 167\n            \"time\": 1                                                                                                 // 167\n          });                                                                                                         // 167\n        } else {                                                                                                      // 168\n          var paroleFound = false;                                                                                    // 169\n          paroles = user.paroles;                                                                                     // 170\n          paroles.forEach(function (el) {                                                                             // 171\n            if (el['order'] == currentSpeech.orderChoose) {                                                           // 172\n              paroleFound = true;                                                                                     // 173\n              el['time'] = parseInt(el['time']) + 1;                                                                  // 174\n            }                                                                                                         // 175\n          });                                                                                                         // 176\n                                                                                                                      //\n          if (!paroleFound) {                                                                                         // 177\n            paroles.push({                                                                                            // 178\n              \"order\": currentSpeech.orderChoose,                                                                     // 178\n              \"time\": 1                                                                                               // 178\n            });                                                                                                       // 178\n          }                                                                                                           // 179\n        }                                                                                                             // 180\n                                                                                                                      //\n        Users.update(user._id, {                                                                                      // 182\n          $set: {                                                                                                     // 182\n            paroles: paroles                                                                                          // 182\n          }                                                                                                           // 182\n        }); //Update du temps restant du speech                                                                       // 182\n                                                                                                                      //\n        Speeches.update(currentSpeech._id, {                                                                          // 185\n          $set: {                                                                                                     // 187\n            timeLeft: Speeches.findOne({                                                                              // 187\n              meeting: Session.get(\"meetingId\"),                                                                      // 187\n              status: \"ongoing\"                                                                                       // 187\n            }).timeLeft + 1                                                                                           // 187\n          }                                                                                                           // 187\n        }); //Update du statut du speech si celui ci est terminé                                                      // 187\n                                                                                                                      //\n        if (Speeches.findOne({                                                                                        // 190\n          meeting: Session.get(\"meetingId\"),                                                                          // 190\n          status: \"ongoing\"                                                                                           // 190\n        }).timeLeft == Speeches.findOne({                                                                             // 190\n          meeting: Session.get(\"meetingId\"),                                                                          // 190\n          status: \"ongoing\"                                                                                           // 190\n        }).time) {                                                                                                    // 190\n          Speeches.update(Speeches.findOne({                                                                          // 191\n            meeting: Session.get(\"meetingId\"),                                                                        // 192\n            status: \"ongoing\"                                                                                         // 192\n          })._id, {                                                                                                   // 192\n            $set: {                                                                                                   // 193\n              status: \"done\"                                                                                          // 193\n            }                                                                                                         // 193\n          });                                                                                                         // 193\n          Meteor.clearInterval(timerId);                                                                              // 195\n        }                                                                                                             // 196\n      }, 1000);                                                                                                       // 197\n    } //Rafraichi la fonction de drag'n'drop                                                                          // 198\n    //Utile pour empêcher le déplacement du premier meeting quand on clique sur 'proceed'                             // 200\n    //trouver une autre solution (la méthode \"refresh\" semble inefficace)                                             // 201\n                                                                                                                      //\n                                                                                                                      //\n    setTimeout(function () {                                                                                          // 202\n      sortableList.sortable(\"destroy\");                                                                               // 203\n      computeSortable(sortableList);                                                                                  // 204\n    }, 100);                                                                                                          // 205\n  }                                                                                                                   // 207\n});                                                                                                                   // 105\nTemplate.meeting.onCreated(function () {                                                                              // 212\n  Meteor.subscribe(\"presences\");                                                                                      // 213\n  Meteor.subscribe(\"users\"); //   meeting = this.data;                                                                // 214\n                                                                                                                      //\n  Session.set(\"meeting\", this.data);                                                                                  // 217\n  Session.set('currentRoomId', this._id);                                                                             // 218\n}); //summernote : don't touch                                                                                        // 220\n                                                                                                                      //\nTemplate.meeting.onRendered(function () {                                                                             // 229\n  $(document).ready(function () {                                                                                     // 230\n    $('#textareaRich').summernote({                                                                                   // 231\n      height: 300                                                                                                     // 232\n    });                                                                                                               // 231\n  });                                                                                                                 // 234\n});                                                                                                                   // 235\nTemplate.meeting.events({                                                                                             // 239\n  'click #saveReport': function (e) {                                                                                 // 240\n    // increment the counter when button is clicked                                                                   // 241\n    console.log(\"I click on Talk\");                                                                                   // 242\n    var title = $(' #TitleReport').val();                                                                             // 243\n    var data = $('#textareaRich').summernote('code'); //$('.click2edit').summernote('destroy');                       // 244\n                                                                                                                      //\n    console.log(\"title :\" + title + \" data = \" + data);                                                               // 246\n    var doc = new jsPDF();                                                                                            // 247\n    doc.text(10, 10, data);                                                                                           // 248\n    doc.save(title); //Fonctionne mais enregistre en .txt                                                             // 249\n    //var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});                                                // 251\n    //saveAs(blob, title+\".txt\");                                                                                     // 252\n  }                                                                                                                   // 253\n});                                                                                                                   // 239\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meetingLeft.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/js/meetingLeft.js                                                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nTemplate.meetingReport.onRendered(function () {                                                                       // 2\n  $(document).ready(function () {                                                                                     // 3\n    $('#textareaRich').summernote({                                                                                   // 4\n      height: 300                                                                                                     // 5\n    });                                                                                                               // 4\n  });                                                                                                                 // 7\n});                                                                                                                   // 8\nTemplate.meetingReport.events({                                                                                       // 12\n  'click #saveReport': function (e) {                                                                                 // 13\n    // increment the counter when button is clicked                                                                   // 14\n    console.log(\"I click on Talk\");                                                                                   // 15\n    var title = $(' #TitleReport').val();                                                                             // 16\n    var data = $('#textareaRich').summernote('code'); //$('.click2edit').summernote('destroy');                       // 17\n                                                                                                                      //\n    console.log(\"title :\" + title + \" data = \" + data);                                                               // 19\n    var doc = new jsPDF();                                                                                            // 20\n    doc.text(10, 10, data);                                                                                           // 21\n    doc.save(title); //Fonctionne mais enregistre en .txt                                                             // 22\n    //var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});                                                // 24\n    //saveAs(blob, title+\".txt\");                                                                                     // 25\n  },                                                                                                                  // 26\n  'click #goppt': function (e) {                                                                                      // 27\n    console.log(\"GoPPT\");                                                                                             // 28\n    Template.meeting.isTrue = false;                                                                                  // 29\n    console.log(Template.meeting.isTrue);                                                                             // 30\n  }                                                                                                                   // 32\n});                                                                                                                   // 12\nTemplate.pptcont.events({                                                                                             // 35\n  'click #gomt': function (e) {                                                                                       // 36\n    console.log(\"GoMT\");                                                                                              // 37\n    console.log(Template.meeting.isTrue.value());                                                                     // 38\n    Template.meeting.isTrue = true;                                                                                   // 40\n  }                                                                                                                   // 41\n});                                                                                                                   // 35\nTemplate.meetingReport.isTrue = true;                                                                                 // 46\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"Collections\":{\"Groups.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// lib/Collections/Groups.js                                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nGroups = new Meteor.Collection('groups');                                                                             // 1\nGroups.allow({                                                                                                        // 3\n    update: function (userId, group) {                                                                                // 4\n        return true; /*return ownsDocument(userId, group);*/                                                          // 4\n    },                                                                                                                // 4\n    remove: function (userId, group) {                                                                                // 5\n        return ownsDocument(userId, group);                                                                           // 5\n    },                                                                                                                // 5\n    insert: function (userId, doc) {                                                                                  // 6\n        // autoriser les posts seulement si l'utilisateur est authentifié                                             // 7\n        return !!userId;                                                                                              // 8\n    }                                                                                                                 // 9\n});                                                                                                                   // 3\nMeteor.methods({                                                                                                      // 12\n    groupInsert: function (groupAttributes) {                                                                         // 13\n        check(Meteor.userId(), String);                                                                               // 14\n        check(groupAttributes, {                                                                                      // 15\n            name: String,                                                                                             // 16\n            members: [String]                                                                                         // 17\n        });                                                                                                           // 15\n        var user = Meteor.user();                                                                                     // 20\n                                                                                                                      //\n        var group = _.extend(groupAttributes, {                                                                       // 21\n            userId: user._id,                                                                                         // 22\n            author: user.emails,                                                                                      // 23\n            authorAdress: user.emails[0].address,                                                                     // 24\n            authorName: user.username,                                                                                // 25\n            submitted: new Date()                                                                                     // 26\n        });                                                                                                           // 21\n                                                                                                                      //\n        var groupId = Groups.insert(group);                                                                           // 28\n        return {                                                                                                      // 29\n            _id: groupId                                                                                              // 30\n        };                                                                                                            // 29\n    }                                                                                                                 // 32\n});                                                                                                                   // 12\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Meetings.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// lib/Collections/Meetings.js                                                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** The collection that contains the meetings */Meetings = new Mongo.Collection(\"meetings\");                          // 1\nMeetings.allow({                                                                                                      // 4\n    update: function () {                                                                                             // 5\n        return true; /*return ownsDocument(userId, group);*/                                                          // 5\n    },                                                                                                                // 5\n    remove: function () {                                                                                             // 6\n        return true;                                                                                                  // 6\n    },                                                                                                                // 6\n    insert: function () {                                                                                             // 7\n        return true;                                                                                                  // 8\n    }                                                                                                                 // 9\n});                                                                                                                   // 4\nMeteor.methods({                                                                                                      // 13\n    meetingInsert: function (meetingAttributes) {                                                                     // 14\n        check(meetingAttributes, {                                                                                    // 16\n            name: String,                                                                                             // 17\n            duration: String,                                                                                         // 18\n            animatorName: String,                                                                                     // 19\n            animatorMail: String,                                                                                     // 20\n            participantsEmails: [String],                                                                             // 21\n            participantActivity: [Boolean],                                                                           // 22\n            status: String,                                                                                           // 23\n            ordres: [String],                                                                                         // 24\n            ordreTimes: [Number],                                                                                     // 25\n            speaker: String /*,                                                                                       // 26\n                            pwd : \"\" */                                                                               //\n        });                                                                                                           // 16\n                                                                                                                      //\n        var meeting = _.extend(meetingAttributes, {                                                                   // 30\n            submitted: new Date()                                                                                     // 31\n        });                                                                                                           // 30\n                                                                                                                      //\n        var meetingId = Meetings.insert(meeting);                                                                     // 33\n        return {                                                                                                      // 36\n            _id: meetingId                                                                                            // 37\n        };                                                                                                            // 36\n    }                                                                                                                 // 39\n}); /*                                                                                                                // 13\n     Exemple :                                                                                                        //\n                                                                                                                      //\n     name: 'test',                                                                                                    //\n     status: \"ongoing\",                                                                                               //\n     ordres: ['ordre1', 'ordre2', 'ordre3'],                                                                          //\n     ordreTimes: [90, 130, 268],                                                                                      //\n     _id: id                                                                                                          //\n     pwd : \"\"                                                                                                         //\n     */                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Speeches.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// lib/Collections/Speeches.js                                                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** The collection that contains the speeches */Speeches = new Mongo.Collection(\"speeches\");                          // 1\nSpeeches.allow({                                                                                                      // 4\n    update: function () {                                                                                             // 5\n        return true; /*return ownsDocument(userId, group);*/                                                          // 5\n    },                                                                                                                // 5\n    remove: function () {                                                                                             // 6\n        return true;                                                                                                  // 6\n    },                                                                                                                // 6\n    insert: function () {                                                                                             // 7\n        return true;                                                                                                  // 8\n    }                                                                                                                 // 9\n});                                                                                                                   // 4\nMeteor.methods({                                                                                                      // 13\n    speechesInsert: function (speechesAttributes) {                                                                   // 14\n        check(speechesAttributes, {                                                                                   // 16\n            meetingID: String /*,                                                                                     // 17\n                              speakers: [String]                                                                      //\n                              */                                                                                      //\n        });                                                                                                           // 16\n        var speechesId = Speeches.insert(speechesAttributes);                                                         // 24\n        return {                                                                                                      // 27\n            _id: speechesId                                                                                           // 28\n        };                                                                                                            // 27\n    }                                                                                                                 // 30\n});                                                                                                                   // 13\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Router.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// lib/Router.js                                                                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nRouter.configure({                                                                                                    // 1\n  layoutTemplate: 'layout',                                                                                           // 2\n  waitOn: function () {                                                                                               // 3\n    return [Meteor.subscribe('groups'), Meteor.subscribe('meetings')];                                                // 4\n  }                                                                                                                   // 7\n}); /** The route to the home page */                                                                                 // 1\nRouter.route('/', {                                                                                                   // 14\n  name: 'home'                                                                                                        // 14\n});                                                                                                                   // 14\nRouter.route('/create/:_id?', {                                                                                       // 16\n  name: 'create',                                                                                                     // 17\n  data: function () {                                                                                                 // 18\n    return Groups.findOne(this.params._id);                                                                           // 18\n  }                                                                                                                   // 18\n});                                                                                                                   // 16\nRouter.route('/groups', {                                                                                             // 21\n  name: 'groups'                                                                                                      // 21\n});                                                                                                                   // 21\nRouter.route('/groupSubmit', {                                                                                        // 22\n  name: 'groupSubmit'                                                                                                 // 22\n});                                                                                                                   // 22\nRouter.route('/groups/:_id', {                                                                                        // 23\n  name: 'groupPage',                                                                                                  // 24\n  data: function () {                                                                                                 // 25\n    return Groups.findOne(this.params._id);                                                                           // 25\n  }                                                                                                                   // 25\n});                                                                                                                   // 23\nRouter.route('/meeting/:_meetingId', {                                                                                // 29\n  name: 'meeting',                                                                                                    // 30\n  data: function () {                                                                                                 // 31\n    // Recherche du meeting dont l'id est passé en paramètre                                                          // 32\n    // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé                           // 33\n    var meeting = Meetings.findOne({                                                                                  // 34\n      _id: this.params._meetingId,                                                                                    // 34\n      status: \"ongoing\"                                                                                               // 34\n    }); //  console.log(meeting);                                                                                     // 34\n                                                                                                                      //\n    if (meeting === undefined) {                                                                                      // 37\n      //  console.log('undefined meeting...');                                                                        // 38\n      Router.configure({                                                                                              // 39\n        layoutTemplate: 'layout',                                                                                     // 39\n        notFoundTemplate: '404'                                                                                       // 39\n      });                                                                                                             // 39\n    } else return Meetings.findOne({                                                                                  // 40\n      _id: this.params._meetingId,                                                                                    // 42\n      status: \"ongoing\"                                                                                               // 42\n    });                                                                                                               // 42\n  }                                                                                                                   // 44\n});                                                                                                                   // 29\nRouter.route('/join/:_meetingId/:_userId', {                                                                          // 47\n  name: 'join',                                                                                                       // 48\n  data: function () {                                                                                                 // 49\n    // Recherche du meeting dont l'id est passé en paramètre                                                          // 51\n    // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé                           // 52\n    var meeting = Meetings.findOne({                                                                                  // 53\n      _id: this.params._meetingId                                                                                     // 53\n    });                                                                                                               // 53\n                                                                                                                      //\n    if (meeting === undefined) {                                                                                      // 54\n      console.log('meeting undefined');                                                                               // 55\n      Router.configure({                                                                                              // 56\n        layoutTemplate: 'layout',                                                                                     // 56\n        notFoundTemplate: '404'                                                                                       // 56\n      });                                                                                                             // 56\n    } //Recherche de l'utilisateur                                                                                    // 57\n    //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouvé                        // 60\n    //Ne permet qu'aux utilisateurs invités de rejoindre un meeting                                                   // 61\n                                                                                                                      //\n                                                                                                                      //\n    var user = MeetingUsers.findOne({                                                                                 // 62\n      _id: this.params._userId                                                                                        // 62\n    });                                                                                                               // 62\n                                                                                                                      //\n    if (user === undefined) {                                                                                         // 63\n      console.log('user undefined');                                                                                  // 64\n      Router.configure({                                                                                              // 65\n        layoutTemplate: 'layout',                                                                                     // 65\n        notFoundTemplate: '404'                                                                                       // 65\n      });                                                                                                             // 65\n    }                                                                                                                 // 66\n                                                                                                                      //\n    Session.set(\"meetingId\", this.params._meetingId);                                                                 // 68\n    Session.set(\"userId\", this.params._userId);                                                                       // 69\n    return {};                                                                                                        // 71\n  }                                                                                                                   // 72\n});                                                                                                                   // 47\nRouter.route('/meeting/:_meetingId/lineup', function () {                                                             // 75\n  this.render('lineup');                                                                                              // 76\n});                                                                                                                   // 77\nRouter.route('/end', function () {                                                                                    // 79\n  this.render('end');                                                                                                 // 80\n});                                                                                                                   // 81\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"i18n\":{\"en.i18n.json\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// i18n/en.i18n.json                                                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _ = Package.underscore._,                                                                                         // 1\n    package_name = \"project\",                                                                                         // 2\n    namespace = \"project\";                                                                                            // 3\n                                                                                                                      // 4\nif (package_name != \"project\") {                                                                                      // 5\n    namespace = TAPi18n.packages[package_name].namespace;                                                             // 6\n}                                                                                                                     // 7\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];                                                                // 9\n// integrate the fallback language translations                                                                       // 10\ntranslations = {};                                                                                                    // 11\ntranslations[namespace] = {\"mainTitle\":\"TakeTalk | The new meeting manager\",\"lang\":\"Language\",\"tuto\":\"Tutorial\",\"downloads\":\"Downloads\",\"groups\":\"Groups\",\"menu\":\"Menu\",\"menuGroup\":\"My groups\",\"createGroup\":\"Create a group\",\"groupTitle\":\"Groups\",\"groupBodyTitle\":\"Your groups\",\"groupInfo\":\"managed groups\",\"groupSubmit\":\"Submit a group\",\"name\":\"Name\",\"members\":\"Members\",\"addMembers\":\"Add members\",\"openMeeting\":\"Open a meeting\",\"managedBy\":\"managed by \",\"noGroup\":\"You haven't group yet.\",\"tutoTitle\":\"Tutorial\",\"tutoBodyTitle\":\"How to use TakeTalk\",\"downloadTitle\":\"Downloads\",\"downloadBodyTitle\":\"Documents to downloads\",\"presentationApp\":\"Presentation of the application (PDF)\",\"access\":\"access\",\"joinTitle\":\"Join a meeting\",\"joinName\":\"Your name\",\"joinPwd\":\"Meeting's password\",\"joinSubmit\":\"Join\",\"lineupTitle\":\"Line up to talk\",\"lineupOrder\":\"Order\",\"lineupKeywords\":\"Keywords\",\"lineupSpeach\":\"Speach time\",\"lineupQuick\":\"Quick line up\",\"lineupAs\":\"Line up as : \",\"lineupSubmit\":\"Line up\",\"lineupCancel\":\"Cancel\",\"homeTitle\":\"TakeTalk is your new companion app!\",\"homeBody\":\"With TakeTalk manage your contributors' speech time to make the best out of your meetings!\",\"endThanks\":\"Thank you for having choose TakeTalk!\",\"endSum\":\"Here a summary of what happened during this meeting\",\"warning\":\"Warning ! \",\"warningLogInfo\":\"You should be log in for viewing this features\",\"meetingLink\":\"Link of the report\",\"meetingLineUp\":\"People lining up\",\"meetingKeywords\":\"Keywords:\",\"meetingMembers\":\"People on this meeting\",\"meetingAdd\":\"Add local participant\",\"meetingInvite\":\"Invite participants\",\"meetingClose\":\"Close meeting\",\"meetingNewParticipant\":\"New Local Participant\",\"meetingParticipantsName\":\"Participants' Name\",\"meetingParticipantsMail\":\"Your participants' e-mails\",\"meetingByMail\":\"By email address\",\"meetingSpeechDeleted\":\"Your speech have been deleted\",\"meetingMinEstimated\":\"min estimated\",\"meetingNoDuration\":\"no duration scheduled\",\"createTitle\":\"Create a meeting\",\"createAnimatorName\":\"Your name *\",\"createMail\":\"Your e-mail *\",\"createMeetingName\":\"Your meeting's name *\",\"createLink\":\"Link of the report\",\"createParticipantsMail\":\"Your participants' e-mails\",\"createMeeting\":\"Create your meeting\",\"timeMeeting\":\"Time of Meeting\",\"close\":\"Close\",\"add\":\"Add\",\"invite\":\"Invite\"};\nTAPi18n._loadLangFileObject(\"en\", translations);                                                                      // 13\n                                                                                                                      // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fr.i18n.json\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// i18n/fr.i18n.json                                                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _ = Package.underscore._,                                                                                         // 1\n    package_name = \"project\",                                                                                         // 2\n    namespace = \"project\";                                                                                            // 3\n                                                                                                                      // 4\nif (package_name != \"project\") {                                                                                      // 5\n    namespace = TAPi18n.packages[package_name].namespace;                                                             // 6\n}                                                                                                                     // 7\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"Français\"];                                                       // 8\n                                                                                                                      // 9\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/application/template.create.js\");\nrequire(\"./client/application/template.home.js\");\nrequire(\"./client/application/template.input.js\");\nrequire(\"./client/application/template.meeting.js\");\nrequire(\"./client/application/template.meetingLeft.js\");\nrequire(\"./client/group/template.group_item.js\");\nrequire(\"./client/group/template.group_list.js\");\nrequire(\"./client/group/template.group_page.js\");\nrequire(\"./client/group/template.group_submit.js\");\nrequire(\"./client/group/template.groups.js\");\nrequire(\"./client/template.layout.js\");\nrequire(\"./lib/Collections/Groups.js\");\nrequire(\"./lib/Collections/Meetings.js\");\nrequire(\"./lib/Collections/Speeches.js\");\nrequire(\"./lib/Router.js\");\nrequire(\"./client/group/group_item.js\");\nrequire(\"./client/group/group_list.js\");\nrequire(\"./client/group/group_page.js\");\nrequire(\"./client/group/group_submit.js\");\nrequire(\"./client/helpers/config.js\");\nrequire(\"./client/js/create.js\");\nrequire(\"./client/js/home.js\");\nrequire(\"./client/js/meeting.js\");\nrequire(\"./client/js/meetingLeft.js\");\nrequire(\"./i18n/en.i18n.json\");\nrequire(\"./i18n/fr.i18n.json\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/group/group_item.js","/client/group/group_list.js","/client/group/group_page.js","/client/group/group_submit.js","/client/helpers/config.js","/client/js/create.js","/client/js/home.js","/client/js/meeting.js","/client/js/meetingLeft.js","/lib/Collections/Groups.js","/lib/Collections/Meetings.js","/lib/Collections/Speeches.js","/lib/Router.js"],"names":["Template","groupItem","helpers","ownGroup","userId","Meteor","partGroup","res","i","members","length","user","emails","address","groupsList","groups","Groups","find","groupPage","events","e","preventDefault","confirm","currentGroupId","_id","remove","Router","go","member","update","$pull","parentId","parentData","target","console","log","AddedMember","document","querySelector","$push","value","groupSubmit","onCreated","Session","set","inputs","get","uniqid","Math","floor","random","push","membersInputs","$","name","group","val","call","error","result","alert","reason","input","event","currentTarget","attr","_","filter","x","Accounts","ui","config","passwordSignupFields","extraSignupFields","fieldName","fieldLabel","inputType","visible","create","rank","parents","getAttribute","form","nextRank","parseInt","newInput","cloneNode","append","ordreInputs","ordreDuJour","ordreTimeInputs","ordreDuJourTemps","participantsInputs","participantsEmails","ordres","ordreTimes","participantActivity","meeting","meetingName","duration","meetingDuration","animatorName","animatorMail","animatorEmail","status","speaker","meetingId","emailBody","onRendered","username","tempName","d","Date","setHours","datetimepicker","format","defaultDate","home","sortableList","Presence","state","online","currentRoomId","users","userIds","Presences","map","presence","userPres","$in","$ne","getSpeaker","Meetings","findOne","isSpeaker","mail","isAsking","Speeches","myMeetingId","speakers","count","ownMeeting","partMeeting","speeches","$set","clearInterval","timerId","sort","setInterval","currentSpeech","Users","paroles","time","undefined","orderChoose","paroleFound","forEach","el","timeLeft","setTimeout","sortable","computeSortable","subscribe","data","ready","summernote","height","title","doc","jsPDF","text","save","meetingReport","isTrue","pptcont","Collection","allow","ownsDocument","insert","methods","groupInsert","groupAttributes","check","String","extend","author","authorAdress","authorName","submitted","groupId","Mongo","meetingInsert","meetingAttributes","Boolean","Number","speechesInsert","speechesAttributes","meetingID","speechesId","configure","layoutTemplate","waitOn","route","params","_meetingId","notFoundTemplate","MeetingUsers","_userId","render"],"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","file":"/app.js","sourcesContent":["Template.groupItem.helpers({\n  ownGroup:function(){\n    return this.userId === Meteor.userId();\n  },\n  partGroup:function(){\n    var res=0;\n    if(this.userId === Meteor.userId()){\n      res=1;\n    }\n    else{\n      for(i=0;i<this.members.length;i++){\n        if(this.members[i]===Meteor.user().emails[0].address){\n          res=1;\n          i=this.members.length;\n        }\n      }\n    }\n    return res;\n  }\n});\n","Template.groupsList.helpers({\n  groups: function() {\n    return Groups.find();\n  }\n});\n","Template.groupPage.helpers({\n  ownGroup:function(){\n    return this.userId === Meteor.userId();\n  },\n  partGroup:function(){\n    var res=0;\n    if(this.userId === Meteor.userId()){\n      res=1;\n    }\n    else{\n      for(i=0;i<this.members.length;i++){\n        if(this.members[i]===Meteor.user().emails[0].address){\n          res=1;\n          i=this.members.length;\n        }\n      }\n    }\n    return res;\n  }\n});\n\nTemplate.groupPage.events({\n\n  'click .delete': function(e) {\n    e.preventDefault();\n\n    if (confirm(\"Delete this group?\")) {\n      var currentGroupId = this._id;\n      Groups.remove(currentGroupId);\n      Router.go('groups');\n\n    }\n  },\n  'click .quit': function(e) {\n    e.preventDefault();\n\n    if (confirm(\"Do you want to leave this group?\")) {\n      var currentGroupId = this._id;\n      var member=Meteor.user().emails[0].address;\n      Groups.update(currentGroupId,{$pull : {members : member}} );\n      Router.go('groups');\n\n    }\n  },\n  'click #min-input': function (e) {\n\n\n    e.preventDefault();\n\n    if (confirm(\"Do you want to kik \" +this +\" ?\")) {\n      var parentId=Template.parentData(1)._id;\n      var target=\"\"+this;\n    //  console.log(\"taille parent : \"+Template.parentData(1).members.length);\n\n\n      console.log(target);\n      Groups.update({_id:parentId},{$pull : {members : target}} );\n    //alert(\"member removed!\");\n    }\n\n  },\n  'click #add-member': function(e) {\n    e.preventDefault();\n    //Récupération des éléments DOM des champs de saisie\n    var currentGroupId = this._id;\n\n    var AddedMember = document.querySelector('[name=AddedMember]');\n\n    Groups.update(currentGroupId,{$push : {members : AddedMember.value}} );\n\n    AddedMember.value=\"\";\n  },\n  'click #open': function(e){\n      Router.go('create', this);\n  }\n});\n","Template.groupSubmit.onCreated(function() {\n  Session.set('inputs', []); // on page load, set this to have no inputs\n});\n\nTemplate.groupSubmit.helpers({\n  inputs: function () {\n    return Session.get('inputs'); // reactively watches the Session variable, so when it changes, this result will change and our template will change\n  }\n});\n\n// Now we'll set up a click handler to add inputs to our array when we   click the \"add\" button\nTemplate.groupSubmit.events({\n  'click #add-input': function () {\n\n    var inputs = Session.get('inputs');\n    var uniqid = Math.floor(Math.random() * 100000); // Give a unique ID so you can pull _this_ input when you click remove\n    inputs.push({uniqid: uniqid, value: \"\"});\n    Session.set('inputs', inputs);\n  },\n\n  'submit form': function(e) {\n    e.preventDefault();\n    //Récupération des éléments DOM des champs de saisie\n    var membersInputs = $(e.target).find('[name=member]');\n\n\n    //Récupération des valeurs de l'ordre du jour, temps estimés et des emails d'invitation\n    var name = [];;\n    var members = [];\n\n\n    for (i = 0; i < membersInputs.length; i++) {\n      if (membersInputs[i].value != \"\") {\n        members.push(membersInputs[i].value);\n      }\n    }\n\n  //  name.push(nameInput[0].value);\n\n    var group = {\n      name: $(e.target).find('[name=name]').val(),\n      members\n    }\n\n    Meteor.call('groupInsert', group, function(error, result) {\n      // affiche l'erreur à l'utilisateur et s'interrompt\n      if (error)\n      return alert(error.reason);\n      Router.go('groups', {_id: result._id});\n    });\n  }\n\n\n});\n\n\n// We also need handlers for when the inputs themselves are changed / removed\nTemplate.input.events({\n  'click #remove-input': function(event) {\n    var uniqid = $(event.currentTarget).attr('uniqid');\n    inputs = Session.get('inputs');\n    inputs = _.filter(inputs, function(x) { return x.uniqid != uniqid; });\n    Session.set('inputs', inputs);\n  }/*,\n  'change input': function(event) {\n    var $input = $(event.currentTarget);\n    var uniqid = $input.attr('uniqid');\n    inputs = Session.get('inputs');\n    index = inputs.findIndex(function(x) { return x.uniqid == uniqid; });\n    inputs[index].value = $input.val();\n    Session.set('inputs', inputs);\n  }*/\n});\n","Accounts.ui.config({\n  passwordSignupFields: 'USERNAME_AND_EMAIL',\n  extraSignupFields: [\n    {\n        fieldName: 'last-name',\n        fieldLabel: 'Last name',\n        inputType: 'text',\n        visible: true,\n    },\n    {\n        fieldName: 'meetingId',\n        fieldLabel: 'meetingId',\n        inputType: 'text',\n        visible: false,\n    }\n  ]\n});\n","\n\nTemplate.create.events({\n  //Création d'un nouveau champ de saisie lorsqu'un caractère est renseigné\n  'keyup .participant-email-input': function(e) {\n    var input = $(e.target);\n    if (input.val().length > 0) {\n      var rank = input.parents(\".participant-email\")[0].getAttribute('rank');\n      var form = input.parents(\"#create-form\");\n      var nextRank = parseInt(rank) + 1;\n\n      if ($(form).find('.participant-email[rank=\"'+nextRank+'\"]').length < 1) {\n        var newInput = $(input.parents(\".participant-email\")[0].cloneNode(true));\n        newInput.find(\".participant-email-input\").val(\"\");\n        newInput.attr('rank', nextRank);\n        $(input.parents(\".participant-email-group\")[0]).append(newInput)\n      }\n    }\n  },\n\n\n  'submit form': function(e) {\n    e.preventDefault();\n    //Récupération des éléments DOM des champs de saisie\n    var ordreInputs = e.target.ordreDuJour;\n    var ordreTimeInputs = e.target.ordreDuJourTemps;\n    var participantsInputs = e.target.participantsEmails;\n\n    //Récupération des valeurs de l'ordre du jour, temps estimés et des emails d'invitation\n    var ordres = [];\n    var ordreTimes = [];\n    var participantsEmails = [];\n    var participantActivity = [];\n\n    //Récupération des éléments DOM des champs de saisie\n    var participantsInputs = $(e.target).find('[name=participantsEmails]');\n\n\n\n    for (i = 0; i < participantsInputs.length; i++) {\n      if (participantsInputs[i].value != \"\") {\n        participantsEmails.push(participantsInputs[i].value);\n        participantActivity.push(false);\n      }\n    }\n\n    //Création du meeting\n    //voir comment rajouter des personnes au meeting\n    //idée : création d'un tableau qui est rempli en faisant Meteor.user().mettingId = meetingId\n\n    var meeting= {\n      name: e.target.meetingName.value,\n      duration : e.target.meetingDuration.value,\n      animatorName: e.target.animatorName.value,\n      animatorMail:e.target.animatorEmail.value,\n      participantsEmails: participantsEmails,\n      participantActivity:participantActivity,\n      status: 'ongoing',\n      ordres: ordres,\n      ordreTimes: ordreTimes,\n      speaker: e.target.animatorEmail.value\n    };\n\n    Meteor.call('meetingInsert', meeting, function(error, result) {\n      // affiche l'erreur à l'utilisateur et s'interrompt\n      if (error)\n      return alert(error.reason);\n\n      var meetingId=result._id;\n\n      var emailBody = 'Here is the link for the meeting : taketalk.meteor.com/join/' + meetingId + '\\n';\n      Meteor.call('sendEmail',\n      e.target.animatorEmail.value,\n      'noreply@taketalk.com',\n      'TakeTalk session created',\n      'You have just created a session of TakeTalk. \\n\\n' + emailBody\n    );\n\n\n    for(var i = 0; i < participantsEmails.length; i++) {\n      Meteor.call('sendEmail', participantsEmails[i], 'noreply@taketalk.com', 'TakeTalk invitation',\n      'You are invited to a session of TakeTalk. \\n\\n' + emailBody\n    );\n  }\n\n  console.log(\"mail envoyé\");\n  //Redirection vers la page du meeting\n  Router.go('/meeting/' + meetingId);\n\n});\n}\n});\n\nTemplate.create.onRendered(function (){\n  if (Meteor.userId() != null){\n    $(' #animatorName').val(Meteor.user().username);\n    $(' #animatorEmail').val(Meteor.user().emails[0].address);\n  };\n});\nTemplate.tempName.onRendered(function() {\n\n      var d= new Date();\n      d.setHours(0,0,0);\n      $('.datetimepicker').datetimepicker({\n        format:'HH:mm',\n        defaultDate:d\n      //  defaultViewDate : {hours : 00, minutes: 00}\n    });\n});\n","Template.home.events({\n    //Redirection vers la page de création de meeting\n    'click #open': function(e){\n        Router.go('create');\n    }\n});\n","//import { Template } from 'meteor/templating';\n//import { ReactiveVar } from 'meteor/reactive-var';\n\nvar sortableList;\nvar meeting;\n\n//Template.meeting.isTrue = true;\n//console.log(Template.meeting.isTrue);\n\nPresence.state = function() {\n  return {\n    online:true,\n    currentRoomId: Session.get('currentRoomId')\n  };\n};\n\n\nTemplate.meeting.helpers({\n  users: function () {\n        // exclude the currentUser\n        var userIds = Presences.find().map(function(presence) {return presence.userId;});\n        var userPres = Presences.find().map(function(presence) {\n          if(presence.state.currentRoomId===Session.get('currentRoomId'))\n            return presence.userId;\n        });\n        /*\n        console.log(\"je suis connecté  \" +userIds);\n        console.log(\"je suis ici  \" + userPres);*/\n        return Meteor.users.find({_id: {$in: userPres, $ne: Meteor.userId()}});\n      },\n\n  getSpeaker: function(){\n    meeting=Session.get(\"meeting\");\n      var speaker = Meetings.findOne({_id:meeting._id}).speaker;\n      Session.set(\"speaker\",speaker);\n\n  },\n\n  isSpeaker: function(){\n      meeting=Session.get(\"meeting\");\n      speaker=Session.get(\"speaker\");\n      var mail;\n      if(this.animatorMail)\n        mail=this.animatorMail;\n      else\n        mail=\"\"+this;\n      return Meetings.findOne({_id:meeting._id}).speaker === mail;\n  },\n\n\nisAsking: function(){\n    meeting=Session.get(\"meeting\");\n    var mail;\n    if(this.animatorMail)\n      mail=this.animatorMail;\n    else\n      mail=\"\"+this;\n    return Speeches.find({myMeetingId:meeting._id,speakers:mail}).count();\n},\n\n\n/*\n  onLoad:function(){\n    var meeting = this;\n    Session.set(\"meeting\",this);\n    Session.set('currentRoomId',this._id);\n    var idMeeting=this._id;\n    var meetingParticipant= this.participantsEmails;\n    var meetingParticipantActivity = this.participantActivity;\n\n  },\n*/\n  ownMeeting:function(){\n    meeting=Session.get(\"meeting\");\n    return meeting.animatorMail === Meteor.user().emails[0].address;\n  },\n  partMeeting:function(){\n    var res=0;\n    if(this.animatorMail === Meteor.user().emails[0].address){\n      res=1;\n    }\n    else{\n      var mail=\"\"+this;\n      if(mail===Meteor.user().emails[0].address)\n        res=1;\n\n      meeting=Session.get(\"meeting\");\n\n/*\n      for(i=0;i<meeting.participantsEmails.length;i++){\n        if(meeting.participantsEmails[i]===Meteor.user().emails[0].address){\n\n          Meetings.update(idMeeting,{$set: {\"meetingParticipantActivity[i]\": true}});\n\n          i=this.participantsEmails.length;\n        }\n      }\n*/\n    }\n\n    return res;\n  }\n});\n\nTemplate.meeting.events({\n  'click #speakControl' : function(e){\n    console.log(meeting._id);\n    meeting=Session.get(\"meeting\");\n    speeches=Speeches.findOne({myMeetingId:meeting._id});\n    if(this.animatorMail){\n      Meetings.update(meeting._id, {$set: {speaker: this.animatorMail}});\n    }\n    else {\n      var mail=\"\"+this;\n      Meetings.update(meeting._id, {$set: {speaker: mail}});\n        Speeches.update(speeches._id , {$pull: {speakers: mail }} );\n    }\n\n  },\n\n'click #speakAsk' : function(e){\n  meeting=Session.get(\"meeting\");\n  speeches=Speeches.findOne({myMeetingId:meeting._id});\n\n\n\n    var mail=\"\"+this;\n    Speeches.update(speeches._id , {$push: {speakers: mail }} );\n},\n\n\n  'click #talkCancel' : function(e){\n    console.log(\"I click on Talk\");\n    //à modifier\n      var userId = Meteor.user().username;\n      var meetingId = Meteor.user().meeting;\n      var rank = 1;\n      console.log(\"userId = \" + userId);\n      console.log(\"meeting = \" + meetingId);\n  },\n\n\n  /** A click on waitProceed starts or stops the timer */\n  'click #waitProceed': function(e) {\n    //Arret du timer\n    if(e.target.value == \"Wait\") {\n      Meteor.clearInterval(timerId);\n      Speeches.update(\n        Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"ongoing\"})._id,\n        {$set: {status: \"pending\"}}\n      );\n    } else {\n      Speeches.update(\n        Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"pending\"}, {sort: {rank: 1}})._id,\n        {$set: {status: \"ongoing\"}}\n      );\n\n      //Lancement du timer\n      timerId = Meteor.setInterval(function() {\n        var currentSpeech = Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"ongoing\"});\n        var user = Users.findOne({_id:currentSpeech.user});\n        var paroles = [];\n        var time = 1;\n\n        //Incrémentation du compteur associé a l'ordre du speech\n        if (user.paroles === undefined) {\n          paroles.push({\"order\": currentSpeech.orderChoose, \"time\": 1});\n        } else {\n          var paroleFound = false;\n          paroles = user.paroles;\n          paroles.forEach(function (el) {\n            if (el['order'] == currentSpeech.orderChoose) {\n              paroleFound = true;\n              el['time'] = parseInt(el['time'])+1;\n            }\n          });\n          if (!paroleFound) {\n            paroles.push({\"order\": currentSpeech.orderChoose, \"time\": 1});\n          }\n        }\n\n        Users.update(user._id,  {$set: {paroles: paroles}});\n\n        //Update du temps restant du speech\n        Speeches.update(\n          currentSpeech._id,\n          {$set: {timeLeft: Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"ongoing\"}).timeLeft + 1}}\n        );\n        //Update du statut du speech si celui ci est terminé\n        if(Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"ongoing\"}).timeLeft == Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"ongoing\"}).time){\n          Speeches.update(\n            Speeches.findOne({meeting: Session.get(\"meetingId\"), status: \"ongoing\"})._id,\n            {$set: {status: \"done\"}}\n          );\n          Meteor.clearInterval(timerId);\n        }\n      } , 1000);\n    }\n    //Rafraichi la fonction de drag'n'drop\n    //Utile pour empêcher le déplacement du premier meeting quand on clique sur 'proceed'\n    //trouver une autre solution (la méthode \"refresh\" semble inefficace)\n      setTimeout(function () {\n      sortableList.sortable(\"destroy\");\n      computeSortable(sortableList);\n    }, 100)\n    ;\n  },\n\n});\n\n\nTemplate.meeting.onCreated(function () {\n  Meteor.subscribe(\"presences\");\n  Meteor.subscribe(\"users\");\n\n//   meeting = this.data;\n  Session.set(\"meeting\",this.data);\n  Session.set('currentRoomId',this._id);\n\n});\n\n\n\n\n\n\n\n//summernote : don't touch\nTemplate.meeting.onRendered(function () {\n$(document).ready(function(){\n  $('#textareaRich').summernote({\n    height: 300,\n  });\n});\n});\n\n\n\nTemplate.meeting.events({\n  'click #saveReport' :function(e) {\n    // increment the counter when button is clicked\n    console.log(\"I click on Talk\");\n    var title = $(' #TitleReport').val();\n    var data = $('#textareaRich').summernote('code');\n    //$('.click2edit').summernote('destroy');\n    console.log(\"title :\" + title + \" data = \" + data);\n    var doc = new jsPDF();\n    doc.text(10,10,data);\n    doc.save(title);\n    //Fonctionne mais enregistre en .txt\n    //var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    //saveAs(blob, title+\".txt\");\n  }\n});\n","\nTemplate.meetingReport.onRendered(function () {\n  $(document).ready(function(){\n    $('#textareaRich').summernote({\n      height: 300,\n    });\n  });\n});\n\n\n\nTemplate.meetingReport.events({\n  'click #saveReport' :function(e) {\n    // increment the counter when button is clicked\n    console.log(\"I click on Talk\");\n    var title = $(' #TitleReport').val();\n    var data = $('#textareaRich').summernote('code');\n    //$('.click2edit').summernote('destroy');\n    console.log(\"title :\" + title + \" data = \" + data);\n    var doc = new jsPDF();\n    doc.text(10,10,data);\n    doc.save(title);\n    //Fonctionne mais enregistre en .txt\n    //var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    //saveAs(blob, title+\".txt\");\n  },\n  'click #goppt' : function(e){\n    console.log(\"GoPPT\");\n    Template.meeting.isTrue = false;\n    console.log(Template.meeting.isTrue);\n\n  },\n});\n\nTemplate.pptcont.events({\n  'click #gomt' : function(e){\n    console.log(\"GoMT\");\n    console.log(Template.meeting.isTrue.value());\n\n    Template.meeting.isTrue = true;\n  },\n});\n\n\n\nTemplate.meetingReport.isTrue = true;\n","Groups = new Meteor.Collection('groups');\n\nGroups.allow({\n  update: function(userId, group) { return true/*return ownsDocument(userId, group);*/ },\n  remove: function(userId, group) { return ownsDocument(userId, group); },\n  insert: function(userId, doc) {\n    // autoriser les posts seulement si l'utilisateur est authentifié\n    return !! userId;\n  }\n });\n\n Meteor.methods({\n     groupInsert: function(groupAttributes) {\n         check(Meteor.userId(), String);\n         check(groupAttributes, {\n             name: String,\n             members: [String]\n         });\n\n         var user = Meteor.user();\n         var group = _.extend(groupAttributes, {\n             userId: user._id,\n             author: user.emails,\n             authorAdress: user.emails[0].address,\n             authorName : user.username,\n             submitted: new Date()\n         });\n         var groupId = Groups.insert(group);\n         return {\n             _id: groupId\n         };\n     }\n });\n","/** The collection that contains the meetings */\nMeetings = new Mongo.Collection(\"meetings\");\n\nMeetings.allow({\n  update: function() { return true/*return ownsDocument(userId, group);*/ },\n  remove: function() { return true },\n  insert: function() {\n    return true;\n  }\n });\n\n\n Meteor.methods({\n     meetingInsert: function(meetingAttributes) {\n\n         check(meetingAttributes, {\n             name: String,\n             duration: String,\n             animatorName: String,\n             animatorMail:String,\n             participantsEmails: [String],\n             participantActivity: [Boolean],\n             status: String,\n             ordres: [String],\n             ordreTimes: [Number],\n             speaker:String/*,\n             pwd : \"\" */\n         });\n\n         var meeting = _.extend(meetingAttributes, {\n             submitted: new Date()\n         });\n         var meetingId = Meetings.insert(meeting);\n\n\n         return {\n             _id: meetingId\n         };\n     }\n });\n\n/*\n Exemple :\n\n name: 'test',\n status: \"ongoing\",\n ordres: ['ordre1', 'ordre2', 'ordre3'],\n ordreTimes: [90, 130, 268],\n _id: id\n pwd : \"\"\n */\n","/** The collection that contains the speeches */\nSpeeches = new Mongo.Collection(\"speeches\");\n\nSpeeches.allow({\n  update: function() { return true/*return ownsDocument(userId, group);*/ },\n  remove: function() { return true },\n  insert: function() {\n    return true;\n  }\n });\n\n\n Meteor.methods({\n     speechesInsert: function(speechesAttributes) {\n\n         check(speechesAttributes, {\n             meetingID: String/*,\n             speakers: [String]\n             */\n         });\n\n\n\n         var speechesId = Speeches.insert(speechesAttributes);\n\n\n         return {\n             _id: speechesId\n         };\n     }\n });\n","Router.configure({\n  layoutTemplate: 'layout',\n  waitOn: function(){\n    return [\n      Meteor.subscribe('groups'),\n      Meteor.subscribe('meetings')\n    ]},\n    /*return Meteor.subscribe('groups'); },\n  waitOn: function(){return Meteor.subscribe('meetings'); }\n  */\n});\n\n/** The route to the home page */\nRouter.route('/', {name:'home'});\n\nRouter.route('/create/:_id?', {\n  name: 'create',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\nRouter.route('/groups', {name:'groups'});\nRouter.route('/groupSubmit', {name:'groupSubmit'});\nRouter.route('/groups/:_id', {\n  name: 'groupPage',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\n\nRouter.route('/meeting/:_meetingId', {\n  name: 'meeting',\n  data: function() {\n  // Recherche du meeting dont l'id est passé en paramètre\n  // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé\n    var meeting = Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  //  console.log(meeting);\n    if(meeting === undefined){\n      //  console.log('undefined meeting...');\n        Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n    }\n    else\n      return  Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  }\n});\n\nRouter.route('/join/:_meetingId/:_userId', {\n    name: 'join',\n    data: function() {\n\n        // Recherche du meeting dont l'id est passé en paramètre\n        // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvé\n        var meeting = Meetings.findOne({_id: this.params._meetingId});\n        if(meeting === undefined){\n            console.log('meeting undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        //Recherche de l'utilisateur\n        //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouvé\n        //Ne permet qu'aux utilisateurs invités de rejoindre un meeting\n        var user = MeetingUsers.findOne({_id: this.params._userId});\n        if(user === undefined){\n            console.log('user undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        Session.set(\"meetingId\", this.params._meetingId);\n        Session.set(\"userId\", this.params._userId);\n\n        return {};\n    }\n});\n\nRouter.route('/meeting/:_meetingId/lineup', function () {\n    this.render('lineup');\n});\n\nRouter.route('/end', function () {\n    this.render('end');\n});\n"]}}]