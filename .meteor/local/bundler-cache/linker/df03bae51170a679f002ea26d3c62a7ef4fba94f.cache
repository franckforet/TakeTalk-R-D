[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nNpmModuleBcrypt = Package['npm-bcrypt'].NpmModuleBcrypt;\nTAPi18next = Package['tap:i18n'].TAPi18next;\nTAPi18n = Package['tap:i18n'].TAPi18n;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"Collections\":{\"Groups.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// lib/Collections/Groups.js                                                                   //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nGroups = new Meteor.Collection('groups');                                                      // 1\nGroups.allow({                                                                                 // 3\n    update: function (userId, group) {                                                         // 4\n        return true; /*return ownsDocument(userId, group);*/                                   // 4\n    },                                                                                         // 4\n    remove: function (userId, group) {                                                         // 5\n        return ownsDocument(userId, group);                                                    // 5\n    },                                                                                         // 5\n    insert: function (userId, doc) {                                                           // 6\n        // autoriser les posts seulement si l'utilisateur est authentifi√©                      // 7\n        return !!userId;                                                                       // 8\n    }                                                                                          // 9\n});                                                                                            // 3\nMeteor.methods({                                                                               // 12\n    groupInsert: function (groupAttributes) {                                                  // 13\n        check(Meteor.userId(), String);                                                        // 14\n        check(groupAttributes, {                                                               // 15\n            name: String,                                                                      // 16\n            members: [String]                                                                  // 17\n        });                                                                                    // 15\n        var user = Meteor.user();                                                              // 20\n                                                                                               //\n        var group = _.extend(groupAttributes, {                                                // 21\n            userId: user._id,                                                                  // 22\n            author: user.emails,                                                               // 23\n            authorAdress: user.emails[0].address,                                              // 24\n            authorName: user.username,                                                         // 25\n            submitted: new Date()                                                              // 26\n        });                                                                                    // 21\n                                                                                               //\n        var groupId = Groups.insert(group);                                                    // 28\n        return {                                                                               // 29\n            _id: groupId                                                                       // 30\n        };                                                                                     // 29\n    }                                                                                          // 32\n});                                                                                            // 12\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Meetings.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// lib/Collections/Meetings.js                                                                 //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\n/** The collection that contains the meetings */Meetings = new Mongo.Collection(\"meetings\");   // 1\nMeetings.allow({                                                                               // 4\n    update: function () {                                                                      // 5\n        return true; /*return ownsDocument(userId, group);*/                                   // 5\n    },                                                                                         // 5\n    remove: function () {                                                                      // 6\n        return true;                                                                           // 6\n    },                                                                                         // 6\n    insert: function () {                                                                      // 7\n        return true;                                                                           // 8\n    }                                                                                          // 9\n});                                                                                            // 4\nMeteor.methods({                                                                               // 13\n    meetingInsert: function (meetingAttributes) {                                              // 14\n        check(meetingAttributes, {                                                             // 16\n            name: String,                                                                      // 17\n            duration: String,                                                                  // 18\n            animatorName: String,                                                              // 19\n            animatorMail: String,                                                              // 20\n            participantsEmails: [String],                                                      // 21\n            participantActivity: [Boolean],                                                    // 22\n            status: String,                                                                    // 23\n            ordres: [String],                                                                  // 24\n            ordreTimes: [Number],                                                              // 25\n            speaker: String /*,                                                                // 26\n                            pwd : \"\" */                                                        //\n        });                                                                                    // 16\n                                                                                               //\n        var meeting = _.extend(meetingAttributes, {                                            // 30\n            submitted: new Date()                                                              // 31\n        });                                                                                    // 30\n                                                                                               //\n        var meetingId = Meetings.insert(meeting);                                              // 33\n        return {                                                                               // 36\n            _id: meetingId                                                                     // 37\n        };                                                                                     // 36\n    }                                                                                          // 39\n}); /*                                                                                         // 13\n     Exemple :                                                                                 //\n                                                                                               //\n     name: 'test',                                                                             //\n     status: \"ongoing\",                                                                        //\n     ordres: ['ordre1', 'ordre2', 'ordre3'],                                                   //\n     ordreTimes: [90, 130, 268],                                                               //\n     _id: id                                                                                   //\n     pwd : \"\"                                                                                  //\n     */                                                                                        //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Speeches.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// lib/Collections/Speeches.js                                                                 //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\n/** The collection that contains the speeches */Speeches = new Mongo.Collection(\"speeches\");   // 1\nSpeeches.allow({                                                                               // 4\n    update: function () {                                                                      // 5\n        return true; /*return ownsDocument(userId, group);*/                                   // 5\n    },                                                                                         // 5\n    remove: function () {                                                                      // 6\n        return true;                                                                           // 6\n    },                                                                                         // 6\n    insert: function () {                                                                      // 7\n        return true;                                                                           // 8\n    }                                                                                          // 9\n});                                                                                            // 4\nMeteor.methods({                                                                               // 13\n    speechesInsert: function (speechesAttributes) {                                            // 14\n        check(speechesAttributes, {                                                            // 16\n            meetingID: String /*,                                                              // 17\n                              speakers: [String]                                               //\n                              */                                                               //\n        });                                                                                    // 16\n        var speechesId = Speeches.insert(speechesAttributes);                                  // 24\n        return {                                                                               // 27\n            _id: speechesId                                                                    // 28\n        };                                                                                     // 27\n    }                                                                                          // 30\n});                                                                                            // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Router.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// lib/Router.js                                                                               //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nRouter.configure({                                                                             // 1\n  layoutTemplate: 'layout',                                                                    // 2\n  waitOn: function () {                                                                        // 3\n    return [Meteor.subscribe('groups'), Meteor.subscribe('meetings')];                         // 4\n  }                                                                                            // 7\n}); /** The route to the home page */                                                          // 1\nRouter.route('/', {                                                                            // 14\n  name: 'home'                                                                                 // 14\n});                                                                                            // 14\nRouter.route('/create/:_id?', {                                                                // 16\n  name: 'create',                                                                              // 17\n  data: function () {                                                                          // 18\n    return Groups.findOne(this.params._id);                                                    // 18\n  }                                                                                            // 18\n});                                                                                            // 16\nRouter.route('/groups', {                                                                      // 21\n  name: 'groups'                                                                               // 21\n});                                                                                            // 21\nRouter.route('/groupSubmit', {                                                                 // 22\n  name: 'groupSubmit'                                                                          // 22\n});                                                                                            // 22\nRouter.route('/groups/:_id', {                                                                 // 23\n  name: 'groupPage',                                                                           // 24\n  data: function () {                                                                          // 25\n    return Groups.findOne(this.params._id);                                                    // 25\n  }                                                                                            // 25\n});                                                                                            // 23\nRouter.route('/meeting/:_meetingId', {                                                         // 29\n  name: 'meeting',                                                                             // 30\n  data: function () {                                                                          // 31\n    // Recherche du meeting dont l'id est pass√© en param√®tre                                   // 32\n    // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouv√©    // 33\n    var meeting = Meetings.findOne({                                                           // 34\n      _id: this.params._meetingId,                                                             // 34\n      status: \"ongoing\"                                                                        // 34\n    }); //  console.log(meeting);                                                              // 34\n                                                                                               //\n    if (meeting === undefined) {                                                               // 37\n      //  console.log('undefined meeting...');                                                 // 38\n      Router.configure({                                                                       // 39\n        layoutTemplate: 'layout',                                                              // 39\n        notFoundTemplate: '404'                                                                // 39\n      });                                                                                      // 39\n    } else return Meetings.findOne({                                                           // 40\n      _id: this.params._meetingId,                                                             // 42\n      status: \"ongoing\"                                                                        // 42\n    });                                                                                        // 42\n  }                                                                                            // 44\n});                                                                                            // 29\nRouter.route('/join/:_meetingId/:_userId', {                                                   // 47\n  name: 'join',                                                                                // 48\n  data: function () {                                                                          // 49\n    // Recherche du meeting dont l'id est pass√© en param√®tre                                   // 51\n    // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouv√©    // 52\n    var meeting = Meetings.findOne({                                                           // 53\n      _id: this.params._meetingId                                                              // 53\n    });                                                                                        // 53\n                                                                                               //\n    if (meeting === undefined) {                                                               // 54\n      console.log('meeting undefined');                                                        // 55\n      Router.configure({                                                                       // 56\n        layoutTemplate: 'layout',                                                              // 56\n        notFoundTemplate: '404'                                                                // 56\n      });                                                                                      // 56\n    } //Recherche de l'utilisateur                                                             // 57\n    //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouv√©\n    //Ne permet qu'aux utilisateurs invit√©s de rejoindre un meeting                            // 61\n                                                                                               //\n                                                                                               //\n    var user = MeetingUsers.findOne({                                                          // 62\n      _id: this.params._userId                                                                 // 62\n    });                                                                                        // 62\n                                                                                               //\n    if (user === undefined) {                                                                  // 63\n      console.log('user undefined');                                                           // 64\n      Router.configure({                                                                       // 65\n        layoutTemplate: 'layout',                                                              // 65\n        notFoundTemplate: '404'                                                                // 65\n      });                                                                                      // 65\n    }                                                                                          // 66\n                                                                                               //\n    Session.set(\"meetingId\", this.params._meetingId);                                          // 68\n    Session.set(\"userId\", this.params._userId);                                                // 69\n    return {};                                                                                 // 71\n  }                                                                                            // 72\n});                                                                                            // 47\nRouter.route('/meeting/:_meetingId/lineup', function () {                                      // 75\n  this.render('lineup');                                                                       // 76\n});                                                                                            // 77\nRouter.route('/end', function () {                                                             // 79\n  this.render('end');                                                                          // 80\n});                                                                                            // 81\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"i18n\":{\"en.i18n.json\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// i18n/en.i18n.json                                                                           //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"mainTitle\":\"TakeTalk | The new meeting manager\",\"lang\":\"Language\",\"tuto\":\"Tutorial\",\"downloads\":\"Downloads\",\"groups\":\"Groups\",\"menu\":\"Menu\",\"menuGroup\":\"My groups\",\"createGroup\":\"Create a group\",\"groupTitle\":\"Groups\",\"groupBodyTitle\":\"Your groups\",\"groupInfo\":\"managed groups\",\"groupSubmit\":\"Submit a group\",\"name\":\"Name\",\"members\":\"Members\",\"addMembers\":\"Add members\",\"openMeeting\":\"Open a meeting\",\"managedBy\":\"managed by \",\"noGroup\":\"You haven't group yet.\",\"tutoTitle\":\"Tutorial\",\"tutoBodyTitle\":\"How to use TakeTalk\",\"downloadTitle\":\"Downloads\",\"downloadBodyTitle\":\"Documents to downloads\",\"presentationApp\":\"Presentation of the application (PDF)\",\"access\":\"access\",\"joinTitle\":\"Join a meeting\",\"joinName\":\"Your name\",\"joinPwd\":\"Meeting's password\",\"joinSubmit\":\"Join\",\"lineupTitle\":\"Line up to talk\",\"lineupOrder\":\"Order\",\"lineupKeywords\":\"Keywords\",\"lineupSpeach\":\"Speach time\",\"lineupQuick\":\"Quick line up\",\"lineupAs\":\"Line up as : \",\"lineupSubmit\":\"Line up\",\"lineupCancel\":\"Cancel\",\"homeTitle\":\"TakeTalk is your new companion app!\",\"homeBody\":\"With TakeTalk manage your contributors' speech time to make the best out of your meetings!\",\"endThanks\":\"Thank you for having choose TakeTalk!\",\"endSum\":\"Here a summary of what happened during this meeting\",\"warning\":\"Warning ! \",\"warningLogInfo\":\"You should be log in for viewing this features\",\"meetingLink\":\"Link of the report\",\"meetingLineUp\":\"People lining up\",\"meetingKeywords\":\"Keywords:\",\"meetingMembers\":\"People on this meeting\",\"meetingAdd\":\"Add local participant\",\"meetingInvite\":\"Invite participants\",\"meetingClose\":\"Close meeting\",\"meetingNewParticipant\":\"New Local Participant\",\"meetingParticipantsName\":\"Participants' Name\",\"meetingParticipantsMail\":\"Your participants' e-mails\",\"meetingByMail\":\"By email address\",\"meetingSpeechDeleted\":\"Your speech have been deleted\",\"meetingMinEstimated\":\"min estimated\",\"meetingNoDuration\":\"no duration scheduled\",\"createTitle\":\"Create a meeting\",\"createAnimatorName\":\"Your name *\",\"createMail\":\"Your e-mail *\",\"createMeetingName\":\"Your meeting's name *\",\"createLink\":\"Link of the report\",\"createParticipantsMail\":\"Your participants' e-mails\",\"createMeeting\":\"Create your meeting\",\"timeMeeting\":\"Time of Meeting\",\"close\":\"Close\",\"add\":\"Add\",\"invite\":\"Invite\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fr.i18n.json\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// i18n/fr.i18n.json                                                                           //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"Fran√ßais\"];\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"mainTitle\":\"TakeTalk | Le nouveau gestionnaire de r√©union\",\"lang\":\"Langue\",\"tuto\":\"Tutoriel\",\"downloads\":\"T√©l√©chargements\",\"groups\":\"Groupes\",\"menu\":\"Menu\",\"menuGroup\":\"Mes groupes\",\"createGroup\":\"Cr√©er un goupe\",\"groupTitle\":\"Groupes\",\"groupBodyTitle\":\"Vos groupes\",\"groupInfo\":\"gourpes supervis√©s\",\"groupSubmit\":\"soumettre un groupe\",\"name\":\"Nom\",\"members\":\"Membres\",\"addMembers\":\"Ajouter des membres\",\"openMeeting\":\"Ouvrir une r√©union\",\"managedBy\":\"supervis√© par \",\"noGroup\":\"Vous n'avez pas encore de groupe.\",\"tutoTitle\":\"Tutoriel\",\"tutoBodyTitle\":\"Comment utiliser TakeTalk\",\"downloadTitle\":\"T√©l√©chargements\",\"downloadBodyTitle\":\"Documents √† t√©l√©charger\",\"presentationApp\":\"Pr√©sentation de l'application (PDF)\",\"access\":\"acc√©der\",\"joinTitle\":\"Rejoindre une r√©union\",\"joinName\":\"Votre nom\",\"joinPwd\":\"Mot de passe de la r√©union\",\"joinSubmit\":\"Rejoindre\",\"lineupTitle\":\"Programme de discussion\",\"lineupOrder\":\"Ordre\",\"lineupKeywords\":\"Mots cl√©s\",\"lineupSpeach\":\"Temps de parole\",\"lineupQuick\":\"Prise de parole rapide\",\"lineupAs\":\"En tant que : \",\"lineupSubmit\":\"Prise de parole\",\"lineupCancel\":\"Annuler\",\"homeTitle\":\"TakeTalk est votre nouvelle application d'accompagnement!\",\"homeBody\":\"Avec TakeTalk, g√©rer le temps de parole de vos participants afin de tirer le meilleur de vos r√©unions!\",\"endThanks\":\"Merci d'avoir choisit TakeTalk!\",\"endSum\":\"Voici un r√©sum√© du d√©roul√© de la r√©union\",\"warning\":\"Attention ! \",\"warningLogInfo\":\"Vous devez √™tre connect√© pour pouvoir acc√©der √† ces fonctionnalit√©es\",\"meetingLink\":\"Lien du rapport\",\"meetingLineUp\":\"Liste des participants\",\"meetingKeywords\":\"Mots cl√©s:\",\"meetingMembers\":\"Participants de cette r√©union\",\"meetingAdd\":\"Ajouter un participant local\",\"meetingInvite\":\"Inviter des participants\",\"meetingClose\":\"Fermer la r√©union\",\"meetingNewParticipant\":\"Nouveau particpant local\",\"meetingParticipantsName\":\"Nom du participant\",\"meetingParticipantsMail\":\"Your participants' e-mails\",\"meetingByMail\":\"Par adresse mail\",\"meetingSpeechDeleted\":\"Votre discour a √©t√© supprim√©\",\"meetingMinEstimated\":\"min √©stim√©e\",\"meetingNoDuration\":\"pas de dur√©e programm√©e\",\"createTitle\":\"Cr√©er une r√©union\",\"createAnimatorName\":\"Votre nom *\",\"createMail\":\"Votre e-mail *\",\"createMeetingName\":\"Nom de la r√©union *\",\"createLink\":\"Lien du rapport\",\"createParticipantsMail\":\"E-mails des participants\",\"createMeeting\":\"Cr√©er votre r√©union\",\"timeMeeting\":\"Temps de la r√©union\",\"close\":\"Fermer\",\"add\":\"Ajouter\",\"invite\":\"Inviter\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"fixtures.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// server/fixtures.js                                                                          //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nif (Meetings.find().count() === 0) {                                                           // 1\n  Meetings.insert({                                                                            // 2\n    title: 'Workshop University Of Evry',                                                      // 3\n    _id: 'meetingTest',                                                                        // 4\n    animator: 'Franck',                                                                        // 5\n    time: '90'                                                                                 // 6\n  });                                                                                          // 2\n}                                                                                              // 8\n                                                                                               //\n;                                                                                              // 8\n                                                                                               //\nif (Meteor.users.find().count() === 0) {                                                       // 10\n  Accounts.createUser({                                                                        // 11\n    username: 'Franck',                                                                        // 12\n    password: 'barcelone',                                                                     // 13\n    email: 'taketalk@gmail.com',                                                               // 14\n    meeting: 'meetingTest'                                                                     // 15\n  });                                                                                          // 11\n}                                                                                              // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// server/methods.js                                                                           //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\n/**                                                                                            // 1\n * This methods alows us to send an e-mail to someone                                          //\n * @param {string} to - The receiver's e-mail                                                  //\n * @param {string} from - The sender's e-mail                                                  //\n * @param {string} subject - The e-mail's header                                               //\n * @param {string} text - The e-mail's body                                                    //\n*/Meteor.methods({                                                                             //\n  //Envoi d'email aux utilisateurs invit√©s                                                     // 9\n  sendEmail: function (to, from, subject, text) {                                              // 10\n    check([to, from, subject, text], [String]);                                                // 11\n    this.unblock();                                                                            // 12\n    Email.send({                                                                               // 13\n      to: to,                                                                                  // 13\n      from: from,                                                                              // 13\n      subject: subject,                                                                        // 13\n      text: text                                                                               // 13\n    });                                                                                        // 13\n  },                                                                                           // 14\n  //Permet de r√©initiliser la base de donn√©es                                                  // 16\n  resetAll: function () {                                                                      // 17\n    Session.set(\"meetingId\", \"\");                                                              // 18\n    Session.set(\"userId\", \"\");                                                                 // 19\n    Speeches.remove({});                                                                       // 20\n    MeetingUsers.remove({});                                                                   // 21\n    Meetings.remove({});                                                                       // 22\n  }                                                                                            // 23\n});                                                                                            // 8\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"publications.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// server/publications.js                                                                      //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nMeteor.publish('groups', function () {                                                         // 1\n  return Groups.find();                                                                        // 2\n});                                                                                            // 3\nMeteor.publish('meetings', function () {                                                       // 6\n  return Meetings.find();                                                                      // 7\n});                                                                                            // 8\nMeteor.publish('speeches', function () {                                                       // 9\n  return Speeches.find();                                                                      // 10\n});                                                                                            // 11\nMeteor.publish('presences', function () {                                                      // 13\n  //  return Presences.find({}, { userId: true });                                             // 14\n  return Presences.find({}, {                                                                  // 15\n    userId: true                                                                               // 15\n  } /*,{state: {currentRoomId: Session.get('currentRoomId')} }*/);                             // 15\n});                                                                                            // 16\nMeteor.publish(\"users\", function () {                                                          // 18\n  return Meteor.users.find({}, {                                                               // 19\n    fields: {                                                                                  // 19\n      \"profile.peerId\": true,                                                                  // 19\n      \"emails.address\": true                                                                   // 19\n    }                                                                                          // 19\n  });                                                                                          // 19\n});                                                                                            // 20\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// server/main.js                                                                              //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar Meteor = void 0;                                                                           // 1\nmodule.import('meteor/meteor', {                                                               // 1\n  \"Meteor\": function (v) {                                                                     // 1\n    Meteor = v;                                                                                // 1\n  }                                                                                            // 1\n}, 0);                                                                                         // 1\nMeteor.startup(function () {// code to run on server at startup                                // 3\n});                                                                                            // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/Collections/Groups.js\");\nrequire(\"./lib/Collections/Meetings.js\");\nrequire(\"./lib/Collections/Speeches.js\");\nrequire(\"./lib/Router.js\");\nrequire(\"./i18n/en.i18n.json\");\nrequire(\"./i18n/fr.i18n.json\");\nrequire(\"./server/fixtures.js\");\nrequire(\"./server/methods.js\");\nrequire(\"./server/publications.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/Collections/Groups.js","/lib/Collections/Meetings.js","/lib/Collections/Speeches.js","/lib/Router.js","/server/fixtures.js","/server/methods.js","/server/publications.js","/server/main.js"],"names":["Groups","Meteor","Collection","allow","update","userId","group","remove","ownsDocument","insert","doc","methods","groupInsert","groupAttributes","check","String","name","members","user","_","extend","_id","author","emails","authorAdress","address","authorName","username","submitted","Date","groupId","Meetings","Mongo","meetingInsert","meetingAttributes","duration","animatorName","animatorMail","participantsEmails","participantActivity","Boolean","status","ordres","ordreTimes","Number","speaker","meeting","meetingId","Speeches","speechesInsert","speechesAttributes","meetingID","speechesId","Router","configure","layoutTemplate","waitOn","subscribe","route","data","findOne","params","_meetingId","undefined","notFoundTemplate","console","log","MeetingUsers","_userId","Session","set","render","find","count","title","animator","time","users","Accounts","createUser","password","email","sendEmail","to","from","subject","text","unblock","Email","send","resetAll","publish","Presences","fields","module","import","v","startup"],"mappings":"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","file":"/app.js","sourcesContent":["Groups = new Meteor.Collection('groups');\n\nGroups.allow({\n  update: function(userId, group) { return true/*return ownsDocument(userId, group);*/ },\n  remove: function(userId, group) { return ownsDocument(userId, group); },\n  insert: function(userId, doc) {\n    // autoriser les posts seulement si l'utilisateur est authentifi√©\n    return !! userId;\n  }\n });\n\n Meteor.methods({\n     groupInsert: function(groupAttributes) {\n         check(Meteor.userId(), String);\n         check(groupAttributes, {\n             name: String,\n             members: [String]\n         });\n\n         var user = Meteor.user();\n         var group = _.extend(groupAttributes, {\n             userId: user._id,\n             author: user.emails,\n             authorAdress: user.emails[0].address,\n             authorName : user.username,\n             submitted: new Date()\n         });\n         var groupId = Groups.insert(group);\n         return {\n             _id: groupId\n         };\n     }\n });\n","/** The collection that contains the meetings */\nMeetings = new Mongo.Collection(\"meetings\");\n\nMeetings.allow({\n  update: function() { return true/*return ownsDocument(userId, group);*/ },\n  remove: function() { return true },\n  insert: function() {\n    return true;\n  }\n });\n\n\n Meteor.methods({\n     meetingInsert: function(meetingAttributes) {\n\n         check(meetingAttributes, {\n             name: String,\n             duration: String,\n             animatorName: String,\n             animatorMail:String,\n             participantsEmails: [String],\n             participantActivity: [Boolean],\n             status: String,\n             ordres: [String],\n             ordreTimes: [Number],\n             speaker:String/*,\n             pwd : \"\" */\n         });\n\n         var meeting = _.extend(meetingAttributes, {\n             submitted: new Date()\n         });\n         var meetingId = Meetings.insert(meeting);\n\n\n         return {\n             _id: meetingId\n         };\n     }\n });\n\n/*\n Exemple :\n\n name: 'test',\n status: \"ongoing\",\n ordres: ['ordre1', 'ordre2', 'ordre3'],\n ordreTimes: [90, 130, 268],\n _id: id\n pwd : \"\"\n */\n","/** The collection that contains the speeches */\nSpeeches = new Mongo.Collection(\"speeches\");\n\nSpeeches.allow({\n  update: function() { return true/*return ownsDocument(userId, group);*/ },\n  remove: function() { return true },\n  insert: function() {\n    return true;\n  }\n });\n\n\n Meteor.methods({\n     speechesInsert: function(speechesAttributes) {\n\n         check(speechesAttributes, {\n             meetingID: String/*,\n             speakers: [String]\n             */\n         });\n\n\n\n         var speechesId = Speeches.insert(speechesAttributes);\n\n\n         return {\n             _id: speechesId\n         };\n     }\n });\n","Router.configure({\n  layoutTemplate: 'layout',\n  waitOn: function(){\n    return [\n      Meteor.subscribe('groups'),\n      Meteor.subscribe('meetings')\n    ]},\n    /*return Meteor.subscribe('groups'); },\n  waitOn: function(){return Meteor.subscribe('meetings'); }\n  */\n});\n\n/** The route to the home page */\nRouter.route('/', {name:'home'});\n\nRouter.route('/create/:_id?', {\n  name: 'create',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\nRouter.route('/groups', {name:'groups'});\nRouter.route('/groupSubmit', {name:'groupSubmit'});\nRouter.route('/groups/:_id', {\n  name: 'groupPage',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\n\nRouter.route('/meeting/:_meetingId', {\n  name: 'meeting',\n  data: function() {\n  // Recherche du meeting dont l'id est pass√© en param√®tre\n  // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouv√©\n    var meeting = Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  //  console.log(meeting);\n    if(meeting === undefined){\n      //  console.log('undefined meeting...');\n        Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n    }\n    else\n      return  Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  }\n});\n\nRouter.route('/join/:_meetingId/:_userId', {\n    name: 'join',\n    data: function() {\n\n        // Recherche du meeting dont l'id est pass√© en param√®tre\n        // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouv√©\n        var meeting = Meetings.findOne({_id: this.params._meetingId});\n        if(meeting === undefined){\n            console.log('meeting undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        //Recherche de l'utilisateur\n        //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouv√©\n        //Ne permet qu'aux utilisateurs invit√©s de rejoindre un meeting\n        var user = MeetingUsers.findOne({_id: this.params._userId});\n        if(user === undefined){\n            console.log('user undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        Session.set(\"meetingId\", this.params._meetingId);\n        Session.set(\"userId\", this.params._userId);\n\n        return {};\n    }\n});\n\nRouter.route('/meeting/:_meetingId/lineup', function () {\n    this.render('lineup');\n});\n\nRouter.route('/end', function () {\n    this.render('end');\n});\n","if(Meetings.find().count() === 0){\n  Meetings.insert({\n    title: 'Workshop University Of Evry',\n    _id: 'meetingTest',\n    animator: 'Franck',\n    time :'90'\n  });\n};\n\nif ( Meteor.users.find().count() === 0 ) {\n    Accounts.createUser({\n        username: 'Franck',\n        password: 'barcelone',\n        email: 'taketalk@gmail.com',\n        meeting: 'meetingTest'\n    });\n}\n","/**\n * This methods alows us to send an e-mail to someone\n * @param {string} to - The receiver's e-mail\n * @param {string} from - The sender's e-mail\n * @param {string} subject - The e-mail's header\n * @param {string} text - The e-mail's body\n*/\nMeteor.methods({\n  //Envoi d'email aux utilisateurs invit√©s\n  sendEmail: function(to, from, subject, text) {\n    check([to, from, subject, text], [String]);\n    this.unblock();\n    Email.send({to: to, from: from, subject: subject, text: text});\n  },\n\n  //Permet de r√©initiliser la base de donn√©es\n  resetAll: function() {\n    Session.set(\"meetingId\", \"\");\n    Session.set(\"userId\", \"\");\n    Speeches.remove({});\n    MeetingUsers.remove({});\n    Meetings.remove({});\n  }\n});\n","Meteor.publish('groups', function() {\n  return Groups.find();\n});\n\n\nMeteor.publish('meetings', function() {\n  return Meetings.find();\n});\nMeteor.publish('speeches', function() {\n  return Speeches.find();\n});\n\nMeteor.publish('presences', function() {\n//  return Presences.find({}, { userId: true });\n return Presences.find({},{ userId: true}/*,{state: {currentRoomId: Session.get('currentRoomId')} }*/);\n});\n\nMeteor.publish(\"users\", function () {\n  return Meteor.users.find({}, {fields: {\"profile.peerId\": true, \"emails.address\": true} });\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]