[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar Presences, Presence;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////\n//                                                                         //\n// packages/tmeasday_presence/packages/tmeasday_presence.js                //\n//                                                                         //\n/////////////////////////////////////////////////////////////////////////////\n                                                                           //\n(function () {\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/tmeasday:presence/lib/common.js                          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nPresences = new Mongo.Collection('presences');                       // 1\n// For backwards compatibilty                                        // 2\nMeteor.presences = Presences;                                        // 3\n                                                                     // 4\nMeteor.methods({                                                     // 5\n  updatePresence: function(state) {                                  // 6\n    check(state, Match.Any);                                         // 7\n                                                                     // 8\n    var connectionId = this.isSimulation                             // 9\n      ? Meteor.connection._lastSessionId                             // 10\n      : this.connection.id;                                          // 11\n                                                                     // 12\n    // Should never happen                                           // 13\n    if (! connectionId)                                              // 14\n      return;                                                        // 15\n                                                                     // 16\n    var update = {};                                                 // 17\n    update.state = state;                                            // 18\n    if (typeof Meteor.userId !== 'undefined' && Meteor.userId())     // 19\n      update.userId = Meteor.userId();                               // 20\n                                                                     // 21\n    Presences.update(connectionId, update);                          // 22\n  }                                                                  // 23\n});                                                                  // 24\n                                                                     // 25\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/tmeasday:presence/lib/server.js                          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar connections = {};                                                // 1\n                                                                     // 2\nvar expire = function(id) {                                          // 3\n  Presences.remove(id);                                              // 4\n  delete connections[id];                                            // 5\n};                                                                   // 6\n                                                                     // 7\nvar tick = function(id) {                                            // 8\n  connections[id].lastSeen = Date.now();                             // 9\n};                                                                   // 10\n                                                                     // 11\nMeteor.startup(function() {                                          // 12\n  Presences.remove({});                                              // 13\n});                                                                  // 14\n                                                                     // 15\nMeteor.onConnection(function(connection) {                           // 16\n  // console.log('connectionId: ' + connection.id);                  // 17\n  Presences.insert({ _id: connection.id });                          // 18\n                                                                     // 19\n  connections[connection.id] = {};                                   // 20\n  tick(connection.id);                                               // 21\n                                                                     // 22\n  connection.onClose(function() {                                    // 23\n    // console.log('connection closed: ' + connection.id);           // 24\n    expire(connection.id);                                           // 25\n  });                                                                // 26\n});                                                                  // 27\n                                                                     // 28\nMeteor.methods({                                                     // 29\n  presenceTick: function() {                                         // 30\n    check(arguments, [Match.Any]);                                   // 31\n    if (this.connection && connections[this.connection.id])          // 32\n      tick(this.connection.id);                                      // 33\n  }                                                                  // 34\n});                                                                  // 35\n                                                                     // 36\nMeteor.setInterval(function() {                                      // 37\n  _.each(connections, function(connection, id) {                     // 38\n    if (connection.lastSeen < (Date.now() - 10000))                  // 39\n      expire(id);                                                    // 40\n  });                                                                // 41\n}, 5000);                                                            // 42\n                                                                     // 43\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n/////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['tmeasday:presence'] = {}, {\n  Presences: Presences,\n  Presence: Presence\n});\n\n})();\n","servePath":"/packages/tmeasday_presence.js"}]