{"version":3,"sources":["meteor://ðŸ’»app/lib/Collections/Groups.js","meteor://ðŸ’»app/lib/Collections/Meetings.js","meteor://ðŸ’»app/lib/Collections/Speeches.js","meteor://ðŸ’»app/lib/Router.js","meteor://ðŸ’»app/server/fixtures.js","meteor://ðŸ’»app/server/methods.js","meteor://ðŸ’»app/server/publications.js","meteor://ðŸ’»app/server/main.js"],"names":["Groups","Meteor","Collection","allow","update","userId","group","remove","ownsDocument","insert","doc","methods","groupInsert","groupAttributes","check","String","name","members","user","_","extend","_id","author","emails","authorAdress","address","authorName","username","submitted","Date","groupId","Meetings","Mongo","meetingInsert","meetingAttributes","duration","animatorName","animatorMail","participantsEmails","participantActivity","Boolean","status","ordres","ordreTimes","Number","speaker","meeting","meetingId","Speeches","speechesInsert","speechesAttributes","meetingID","speechesId","Router","configure","layoutTemplate","waitOn","subscribe","route","data","findOne","params","_meetingId","undefined","notFoundTemplate","console","log","MeetingUsers","_userId","Session","set","render","find","count","title","animator","time","users","Accounts","createUser","password","email","sendEmail","to","from","subject","text","unblock","Email","send","resetAll","publish","Presences","fields","module","import","v","startup"],"mappings":"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","file":"/app.js","sourcesContent":["Groups = new Meteor.Collection('groups');\n\nGroups.allow({\n  update: function(userId, group) { return true/*return ownsDocument(userId, group);*/ },\n  remove: function(userId, group) { return ownsDocument(userId, group); },\n  insert: function(userId, doc) {\n    // autoriser les posts seulement si l'utilisateur est authentifiÃ©\n    return !! userId;\n  }\n });\n\n Meteor.methods({\n     groupInsert: function(groupAttributes) {\n         check(Meteor.userId(), String);\n         check(groupAttributes, {\n             name: String,\n             members: [String]\n         });\n\n         var user = Meteor.user();\n         var group = _.extend(groupAttributes, {\n             userId: user._id,\n             author: user.emails,\n             authorAdress: user.emails[0].address,\n             authorName : user.username,\n             submitted: new Date()\n         });\n         var groupId = Groups.insert(group);\n         return {\n             _id: groupId\n         };\n     }\n });\n","/** The collection that contains the meetings */\nMeetings = new Mongo.Collection(\"meetings\");\n\nMeetings.allow({\n  update: function() { return true/*return ownsDocument(userId, group);*/ },\n  remove: function() { return true },\n  insert: function() {\n    return true;\n  }\n });\n\n\n Meteor.methods({\n     meetingInsert: function(meetingAttributes) {\n\n         check(meetingAttributes, {\n             name: String,\n             duration: String,\n             animatorName: String,\n             animatorMail:String,\n             participantsEmails: [String],\n             participantActivity: [Boolean],\n             status: String,\n             ordres: [String],\n             ordreTimes: [Number],\n             speaker:String/*,\n             pwd : \"\" */\n         });\n\n         var meeting = _.extend(meetingAttributes, {\n             submitted: new Date()\n         });\n         var meetingId = Meetings.insert(meeting);\n\n\n         return {\n             _id: meetingId\n         };\n     }\n });\n\n/*\n Exemple :\n\n name: 'test',\n status: \"ongoing\",\n ordres: ['ordre1', 'ordre2', 'ordre3'],\n ordreTimes: [90, 130, 268],\n _id: id\n pwd : \"\"\n */\n","/** The collection that contains the speeches */\nSpeeches = new Mongo.Collection(\"speeches\");\n\nSpeeches.allow({\n  update: function() { return true/*return ownsDocument(userId, group);*/ },\n  remove: function() { return true },\n  insert: function() {\n    return true;\n  }\n });\n\n\n Meteor.methods({\n     speechesInsert: function(speechesAttributes) {\n\n         check(speechesAttributes, {\n             meetingID: String/*,\n             speakers: [String]\n             */\n         });\n\n\n\n         var speechesId = Speeches.insert(speechesAttributes);\n\n\n         return {\n             _id: speechesId\n         };\n     }\n });\n","Router.configure({\n  layoutTemplate: 'layout',\n  waitOn: function(){\n    return [\n      Meteor.subscribe('groups'),\n      Meteor.subscribe('meetings')\n    ]},\n    /*return Meteor.subscribe('groups'); },\n  waitOn: function(){return Meteor.subscribe('meetings'); }\n  */\n});\n\n/** The route to the home page */\nRouter.route('/', {name:'home'});\n\nRouter.route('/create/:_id?', {\n  name: 'create',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\nRouter.route('/groups', {name:'groups'});\nRouter.route('/groupSubmit', {name:'groupSubmit'});\nRouter.route('/groups/:_id', {\n  name: 'groupPage',\n  data: function() { return Groups.findOne(this.params._id); }\n});\n\n\nRouter.route('/meeting/:_meetingId', {\n  name: 'meeting',\n  data: function() {\n  // Recherche du meeting dont l'id est passÃ© en paramÃ¨tre\n  // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvÃ©\n    var meeting = Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  //  console.log(meeting);\n    if(meeting === undefined){\n      //  console.log('undefined meeting...');\n        Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n    }\n    else\n      return  Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n\n  }\n});\n\nRouter.route('/join/:_meetingId/:_userId', {\n    name: 'join',\n    data: function() {\n\n        // Recherche du meeting dont l'id est passÃ© en paramÃ¨tre\n        // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouvÃ©\n        var meeting = Meetings.findOne({_id: this.params._meetingId});\n        if(meeting === undefined){\n            console.log('meeting undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        //Recherche de l'utilisateur\n        //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouvÃ©\n        //Ne permet qu'aux utilisateurs invitÃ©s de rejoindre un meeting\n        var user = MeetingUsers.findOne({_id: this.params._userId});\n        if(user === undefined){\n            console.log('user undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        Session.set(\"meetingId\", this.params._meetingId);\n        Session.set(\"userId\", this.params._userId);\n\n        return {};\n    }\n});\n\nRouter.route('/meeting/:_meetingId/lineup', function () {\n    this.render('lineup');\n});\n\nRouter.route('/end', function () {\n    this.render('end');\n});\n","if(Meetings.find().count() === 0){\n  Meetings.insert({\n    title: 'Workshop University Of Evry',\n    _id: 'meetingTest',\n    animator: 'Franck',\n    time :'90'\n  });\n};\n\nif ( Meteor.users.find().count() === 0 ) {\n    Accounts.createUser({\n        username: 'Franck',\n        password: 'barcelone',\n        email: 'taketalk@gmail.com',\n        meeting: 'meetingTest'\n    });\n}\n","/**\n * This methods alows us to send an e-mail to someone\n * @param {string} to - The receiver's e-mail\n * @param {string} from - The sender's e-mail\n * @param {string} subject - The e-mail's header\n * @param {string} text - The e-mail's body\n*/\nMeteor.methods({\n  //Envoi d'email aux utilisateurs invitÃ©s\n  sendEmail: function(to, from, subject, text) {\n    check([to, from, subject, text], [String]);\n    this.unblock();\n    Email.send({to: to, from: from, subject: subject, text: text});\n  },\n\n  //Permet de rÃ©initiliser la base de donnÃ©es\n  resetAll: function() {\n    Session.set(\"meetingId\", \"\");\n    Session.set(\"userId\", \"\");\n    Speeches.remove({});\n    MeetingUsers.remove({});\n    Meetings.remove({});\n  }\n});\n","Meteor.publish('groups', function() {\n  return Groups.find();\n});\n\n\nMeteor.publish('meetings', function() {\n  return Meetings.find();\n});\nMeteor.publish('speeches', function() {\n  return Speeches.find();\n});\n\nMeteor.publish('presences', function() {\n//  return Presences.find({}, { userId: true });\n return Presences.find({},{ userId: true}/*,{state: {currentRoomId: Session.get('currentRoomId')} }*/);\n});\n\nMeteor.publish(\"users\", function () {\n  return Meteor.users.find({}, {fields: {\"profile.peerId\": true, \"emails.address\": true} });\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}